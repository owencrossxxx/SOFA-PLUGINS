/***********************************************************************
ROS message definition headers and ROS connector template instantiations.
This file is AUTO-GENERATED during the CMake run.
Please do not modify it by hand.
The contents will be overwritten and re-generated.
************************************************************************/


#include <ZyROSConnectorTopicSubscriber.h>
#include <ZyROSConnectorTopicPublisher.h>

#include <actionlib/TestAction.h>
#include <actionlib/TestActionFeedback.h>
#include <actionlib/TestActionGoal.h>
#include <actionlib/TestActionResult.h>
#include <actionlib/TestFeedback.h>
#include <actionlib/TestGoal.h>
#include <actionlib/TestRequestAction.h>
#include <actionlib/TestRequestActionFeedback.h>
#include <actionlib/TestRequestActionGoal.h>
#include <actionlib/TestRequestActionResult.h>
#include <actionlib/TestRequestFeedback.h>
#include <actionlib/TestRequestGoal.h>
#include <actionlib/TestRequestResult.h>
#include <actionlib/TestResult.h>
#include <actionlib/TwoIntsAction.h>
#include <actionlib/TwoIntsActionFeedback.h>
#include <actionlib/TwoIntsActionGoal.h>
#include <actionlib/TwoIntsActionResult.h>
#include <actionlib/TwoIntsFeedback.h>
#include <actionlib/TwoIntsGoal.h>
#include <actionlib/TwoIntsResult.h>
#include <actionlib_msgs/GoalID.h>
#include <actionlib_msgs/GoalStatus.h>
#include <actionlib_msgs/GoalStatusArray.h>
#include <actionlib_tutorials/AveragingAction.h>
#include <actionlib_tutorials/AveragingActionFeedback.h>
#include <actionlib_tutorials/AveragingActionGoal.h>
#include <actionlib_tutorials/AveragingActionResult.h>
#include <actionlib_tutorials/AveragingFeedback.h>
#include <actionlib_tutorials/AveragingGoal.h>
#include <actionlib_tutorials/AveragingResult.h>
#include <actionlib_tutorials/FibonacciAction.h>
#include <actionlib_tutorials/FibonacciActionFeedback.h>
#include <actionlib_tutorials/FibonacciActionGoal.h>
#include <actionlib_tutorials/FibonacciActionResult.h>
#include <actionlib_tutorials/FibonacciFeedback.h>
#include <actionlib_tutorials/FibonacciGoal.h>
#include <actionlib_tutorials/FibonacciResult.h>
#include <bond/Constants.h>
#include <bond/Status.h>
#include <control_msgs/FollowJointTrajectoryAction.h>
#include <control_msgs/FollowJointTrajectoryActionFeedback.h>
#include <control_msgs/FollowJointTrajectoryActionGoal.h>
#include <control_msgs/FollowJointTrajectoryActionResult.h>
#include <control_msgs/FollowJointTrajectoryFeedback.h>
#include <control_msgs/FollowJointTrajectoryGoal.h>
#include <control_msgs/FollowJointTrajectoryResult.h>
#include <control_msgs/GripperCommand.h>
#include <control_msgs/GripperCommandAction.h>
#include <control_msgs/GripperCommandActionFeedback.h>
#include <control_msgs/GripperCommandActionGoal.h>
#include <control_msgs/GripperCommandActionResult.h>
#include <control_msgs/GripperCommandFeedback.h>
#include <control_msgs/GripperCommandGoal.h>
#include <control_msgs/GripperCommandResult.h>
#include <control_msgs/JointControllerState.h>
#include <control_msgs/JointJog.h>
#include <control_msgs/JointTolerance.h>
#include <control_msgs/JointTrajectoryAction.h>
#include <control_msgs/JointTrajectoryActionFeedback.h>
#include <control_msgs/JointTrajectoryActionGoal.h>
#include <control_msgs/JointTrajectoryActionResult.h>
#include <control_msgs/JointTrajectoryControllerState.h>
#include <control_msgs/JointTrajectoryFeedback.h>
#include <control_msgs/JointTrajectoryGoal.h>
#include <control_msgs/JointTrajectoryResult.h>
#include <control_msgs/PidState.h>
#include <control_msgs/PointHeadAction.h>
#include <control_msgs/PointHeadActionFeedback.h>
#include <control_msgs/PointHeadActionGoal.h>
#include <control_msgs/PointHeadActionResult.h>
#include <control_msgs/PointHeadFeedback.h>
#include <control_msgs/PointHeadGoal.h>
#include <control_msgs/PointHeadResult.h>
#include <control_msgs/SingleJointPositionAction.h>
#include <control_msgs/SingleJointPositionActionFeedback.h>
#include <control_msgs/SingleJointPositionActionGoal.h>
#include <control_msgs/SingleJointPositionActionResult.h>
#include <control_msgs/SingleJointPositionFeedback.h>
#include <control_msgs/SingleJointPositionGoal.h>
#include <control_msgs/SingleJointPositionResult.h>
#include <controller_manager_msgs/ControllerState.h>
#include <controller_manager_msgs/ControllerStatistics.h>
#include <controller_manager_msgs/ControllersStatistics.h>
#include <controller_manager_msgs/HardwareInterfaceResources.h>
#include <diagnostic_msgs/DiagnosticArray.h>
#include <diagnostic_msgs/DiagnosticStatus.h>
#include <diagnostic_msgs/KeyValue.h>
#include <dynamic_reconfigure/BoolParameter.h>
#include <dynamic_reconfigure/Config.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/DoubleParameter.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/GroupState.h>
#include <dynamic_reconfigure/IntParameter.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/SensorLevels.h>
#include <dynamic_reconfigure/StrParameter.h>
#include <gazebo_msgs/ContactState.h>
#include <gazebo_msgs/ContactsState.h>
#include <gazebo_msgs/LinkState.h>
#include <gazebo_msgs/LinkStates.h>
#include <gazebo_msgs/ModelState.h>
#include <gazebo_msgs/ModelStates.h>
#include <gazebo_msgs/ODEJointProperties.h>
#include <gazebo_msgs/ODEPhysics.h>
#include <gazebo_msgs/WorldState.h>
#include <geometry_msgs/Accel.h>
#include <geometry_msgs/AccelStamped.h>
#include <geometry_msgs/AccelWithCovariance.h>
#include <geometry_msgs/AccelWithCovarianceStamped.h>
#include <geometry_msgs/Inertia.h>
#include <geometry_msgs/InertiaStamped.h>
#include <geometry_msgs/Point.h>
#include <geometry_msgs/Point32.h>
#include <geometry_msgs/PointStamped.h>
#include <geometry_msgs/Polygon.h>
#include <geometry_msgs/PolygonStamped.h>
#include <geometry_msgs/Pose.h>
#include <geometry_msgs/Pose2D.h>
#include <geometry_msgs/PoseArray.h>
#include <geometry_msgs/PoseStamped.h>
#include <geometry_msgs/PoseWithCovariance.h>
#include <geometry_msgs/PoseWithCovarianceStamped.h>
#include <geometry_msgs/Quaternion.h>
#include <geometry_msgs/QuaternionStamped.h>
#include <geometry_msgs/Transform.h>
#include <geometry_msgs/TransformStamped.h>
#include <geometry_msgs/Twist.h>
#include <geometry_msgs/TwistStamped.h>
#include <geometry_msgs/TwistWithCovariance.h>
#include <geometry_msgs/TwistWithCovarianceStamped.h>
#include <geometry_msgs/Vector3.h>
#include <geometry_msgs/Vector3Stamped.h>
#include <geometry_msgs/Wrench.h>
#include <geometry_msgs/WrenchStamped.h>
#include <map_msgs/OccupancyGridUpdate.h>
#include <map_msgs/PointCloud2Update.h>
#include <map_msgs/ProjectedMap.h>
#include <map_msgs/ProjectedMapInfo.h>
#include <nav_msgs/GetMapAction.h>
#include <nav_msgs/GetMapActionFeedback.h>
#include <nav_msgs/GetMapActionGoal.h>
#include <nav_msgs/GetMapActionResult.h>
#include <nav_msgs/GetMapFeedback.h>
#include <nav_msgs/GetMapGoal.h>
#include <nav_msgs/GetMapResult.h>
#include <nav_msgs/GridCells.h>
#include <nav_msgs/MapMetaData.h>
#include <nav_msgs/OccupancyGrid.h>
#include <nav_msgs/Odometry.h>
#include <nav_msgs/Path.h>
#include <pcl_msgs/ModelCoefficients.h>
#include <pcl_msgs/PointIndices.h>
#include <pcl_msgs/PolygonMesh.h>
#include <pcl_msgs/Vertices.h>
#include <roscpp/Logger.h>
#include <rosgraph_msgs/Clock.h>
#include <rosgraph_msgs/Log.h>
#include <rosgraph_msgs/TopicStatistics.h>
#include <rospy_tutorials/Floats.h>
#include <rospy_tutorials/HeaderString.h>
#include <sensor_msgs/BatteryState.h>
#include <sensor_msgs/CameraInfo.h>
#include <sensor_msgs/ChannelFloat32.h>
#include <sensor_msgs/CompressedImage.h>
#include <sensor_msgs/FluidPressure.h>
#include <sensor_msgs/Illuminance.h>
#include <sensor_msgs/Image.h>
#include <sensor_msgs/Imu.h>
#include <sensor_msgs/JointState.h>
#include <sensor_msgs/Joy.h>
#include <sensor_msgs/JoyFeedback.h>
#include <sensor_msgs/JoyFeedbackArray.h>
#include <sensor_msgs/LaserEcho.h>
#include <sensor_msgs/LaserScan.h>
#include <sensor_msgs/MagneticField.h>
#include <sensor_msgs/MultiDOFJointState.h>
#include <sensor_msgs/MultiEchoLaserScan.h>
#include <sensor_msgs/NavSatFix.h>
#include <sensor_msgs/NavSatStatus.h>
#include <sensor_msgs/PointCloud.h>
#include <sensor_msgs/PointCloud2.h>
#include <sensor_msgs/PointField.h>
#include <sensor_msgs/Range.h>
#include <sensor_msgs/RegionOfInterest.h>
#include <sensor_msgs/RelativeHumidity.h>
#include <sensor_msgs/Temperature.h>
#include <sensor_msgs/TimeReference.h>
#include <shape_msgs/Mesh.h>
#include <shape_msgs/MeshTriangle.h>
#include <shape_msgs/Plane.h>
#include <shape_msgs/SolidPrimitive.h>
#include <smach_msgs/SmachContainerInitialStatusCmd.h>
#include <smach_msgs/SmachContainerStatus.h>
#include <smach_msgs/SmachContainerStructure.h>
#include <std_msgs/Bool.h>
#include <std_msgs/Byte.h>
#include <std_msgs/ByteMultiArray.h>
#include <std_msgs/Char.h>
#include <std_msgs/ColorRGBA.h>
#include <std_msgs/Duration.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Float32.h>
#include <std_msgs/Float32MultiArray.h>
#include <std_msgs/Float64.h>
#include <std_msgs/Float64MultiArray.h>
#include <std_msgs/Header.h>
#include <std_msgs/Int16.h>
#include <std_msgs/Int16MultiArray.h>
#include <std_msgs/Int32.h>
#include <std_msgs/Int32MultiArray.h>
#include <std_msgs/Int64.h>
#include <std_msgs/Int64MultiArray.h>
#include <std_msgs/Int8.h>
#include <std_msgs/Int8MultiArray.h>
#include <std_msgs/MultiArrayDimension.h>
#include <std_msgs/MultiArrayLayout.h>
#include <std_msgs/String.h>
#include <std_msgs/Time.h>
#include <std_msgs/UInt16.h>
#include <std_msgs/UInt16MultiArray.h>
#include <std_msgs/UInt32.h>
#include <std_msgs/UInt32MultiArray.h>
#include <std_msgs/UInt64.h>
#include <std_msgs/UInt64MultiArray.h>
#include <std_msgs/UInt8.h>
#include <std_msgs/UInt8MultiArray.h>
#include <stereo_msgs/DisparityImage.h>
#include <tf/tfMessage.h>
#include <tf2_msgs/LookupTransformAction.h>
#include <tf2_msgs/LookupTransformActionFeedback.h>
#include <tf2_msgs/LookupTransformActionGoal.h>
#include <tf2_msgs/LookupTransformActionResult.h>
#include <tf2_msgs/LookupTransformFeedback.h>
#include <tf2_msgs/LookupTransformGoal.h>
#include <tf2_msgs/LookupTransformResult.h>
#include <tf2_msgs/TF2Error.h>
#include <tf2_msgs/TFMessage.h>
#include <theora_image_transport/Packet.h>
#include <trajectory_msgs/JointTrajectory.h>
#include <trajectory_msgs/JointTrajectoryPoint.h>
#include <trajectory_msgs/MultiDOFJointTrajectory.h>
#include <trajectory_msgs/MultiDOFJointTrajectoryPoint.h>
#include <turtle_actionlib/ShapeAction.h>
#include <turtle_actionlib/ShapeActionFeedback.h>
#include <turtle_actionlib/ShapeActionGoal.h>
#include <turtle_actionlib/ShapeActionResult.h>
#include <turtle_actionlib/ShapeFeedback.h>
#include <turtle_actionlib/ShapeGoal.h>
#include <turtle_actionlib/ShapeResult.h>
#include <turtle_actionlib/Velocity.h>
#include <turtlesim/Color.h>
#include <turtlesim/Pose.h>
#include <visualization_msgs/ImageMarker.h>
#include <visualization_msgs/InteractiveMarker.h>
#include <visualization_msgs/InteractiveMarkerControl.h>
#include <visualization_msgs/InteractiveMarkerFeedback.h>
#include <visualization_msgs/InteractiveMarkerInit.h>
#include <visualization_msgs/InteractiveMarkerPose.h>
#include <visualization_msgs/InteractiveMarkerUpdate.h>
#include <visualization_msgs/Marker.h>
#include <visualization_msgs/MarkerArray.h>
#include <visualization_msgs/MenuEntry.h>


#include <boost/shared_ptr.hpp>
namespace Zyklio
{
	namespace ROSConnector
	{
		class ZyROSConnectorMessageSubscriberFactory
		{
		public:
			static boost::shared_ptr<ZyROSListener> createTopicSubscriber(ros::NodeHandlePtr rosNode, const std::string& topicURI, const std::string& messageType);
		};
	}
}
