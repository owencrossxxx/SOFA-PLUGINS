[1/19] SofaPython: Patching cmake_install.cmake
[2/19] SceneCreator: Patching cmake_install.cmake
[3/19] SofaTest: Patching cmake_install.cmake
[4/19] SofaExporter: Patching cmake_install.cmake
[5/19] SofaSparseSolver: Patching cmake_install.cmake
[6/19] SofaPreconditioner: Patching cmake_install.cmake
[7/19] SofaHaptics: Patching cmake_install.cmake
[8/19] SofaOpenglVisual: Patching cmake_install.cmake
[9/19] CImgPlugin: Patching cmake_install.cmake
[10/19] SofaMiscCollision: Patching cmake_install.cmake
[11/19] SoftRobots: Patching cmake_install.cmake
[12/19] STLIB: Patching cmake_install.cmake
[13/19] Building CXX object applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/initCGALPlugin.cpp.o
FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/initCGALPlugin.cpp.o 
/usr/bin/c++  -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -Iinclude -I/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin -I/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/.. -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen -I/home/owen/Softwares/sofa/src/SofaKernel/extlibs/json -I/home/owen/Softwares/sofa/src/extlibs/gtest/include -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/owen/Softwares/sofa/src/SofaKernel/SofaSimulation/../modules -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaSimulationCore/src -I/home/owen/Softwares/sofa/src/applications/plugins/CImgPlugin/src -I/home/owen/Softwares/sofa/src/applications/plugins/CImgPlugin/extlibs/CImg/.. -Wall -W -O3 -DNDEBUG -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -fPIC   -DSOFA_BUILD_CGALPLUGIN -DFRAMEWORK_TEST_RESOURCES_DIR=\"/home/owen/Softwares/sofa/src/SofaKernel/SofaFramework/resources/tests\" -pthread -DGTEST_LINKED_AS_SHARED_LIBRARY=1 -Dcimg_use_tiff -Dcimg_use_jpeg -Dcimg_use_png -DPNG_SKIP_SETJMP_CHECK -Dcimg_no_system_calls -std=gnu++11 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/initCGALPlugin.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/initCGALPlugin.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/initCGALPlugin.cpp.o -c /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:326,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In member function ‘void Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::operator()(Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::ResScalar*, Index, const LhsScalar*, const RhsScalar*, Index, Index, Index, Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::ResScalar, Index, Index, Index, Index, RhsScalar*)’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:574:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  574 |         if(nr==4) traits.initAcc(C3);
      |         ^~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:575:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  575 |                   traits.initAcc(C4);
      |                   ^~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:946:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  946 |         if(nr==4) R3 = ploadu<ResPacket>(r3);
      |         ^~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:948:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  948 |                   traits.acc(C0, alphav, R0);
      |                   ^~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:951:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  951 |         if(nr==4) traits.acc(C3, alphav, R3);
      |         ^~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:953:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  953 |                   pstoreu(r0, R0);
      |                   ^~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setX(sofa::core::ConstMultiVecCoordId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:186:79: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  186 |     ConstraintParams& setX(                   ConstMultiVecCoordId v) { m_x = v;   return *this; }
      |                                                                               ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_COORD; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setV(sofa::core::ConstMultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:192:79: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  192 |     ConstraintParams& setV(                   ConstMultiVecDerivId v) { m_v = v;   return *this; }
      |                                                                               ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setJ(sofa::core::MultiMatrixDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:198:58: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  198 |     ConstraintParams& setJ(MultiMatrixDerivId j) { m_j = j; return *this; }
      |                                                          ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_MATDERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h: In member function ‘sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>&)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:175:7: warning: implicitly-declared ‘sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>& sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  175 | class TMultiVecId
      |       ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/VecId.h:266:5: note: because ‘sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TVecId<vtype, vaccess>::TVecId(const sofa::core::TVecId<vtype, sofa::core::V_WRITE>&) [with sofa::core::VecType vtype = sofa::core::V_MATDERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  266 |     TVecId(const TVecId<vtype, V_WRITE>& v) : BaseVecId(vtype, v.getIndex()) { }
      |     ^~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setJ(sofa::core::MultiMatrixDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:198:58: note: synthesized method ‘sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>&)’ first required here
  198 |     ConstraintParams& setJ(MultiMatrixDerivId j) { m_j = j; return *this; }
      |                                                          ^
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setDx(sofa::core::MultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:204:58: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  204 |     ConstraintParams& setDx(MultiVecDerivId dx) { m_dx = dx;   return *this; }
      |                                                          ^~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h: In member function ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>&)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:175:7: warning: implicitly-declared ‘sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>& sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  175 | class TMultiVecId
      |       ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/VecId.h:266:5: note: because ‘sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TVecId<vtype, vaccess>::TVecId(const sofa::core::TVecId<vtype, sofa::core::V_WRITE>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  266 |     TVecId(const TVecId<vtype, V_WRITE>& v) : BaseVecId(vtype, v.getIndex()) { }
      |     ^~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setDx(sofa::core::MultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:204:58: note: synthesized method ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>&)’ first required here
  204 |     ConstraintParams& setDx(MultiVecDerivId dx) { m_dx = dx;   return *this; }
      |                                                          ^~
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setLambda(sofa::core::MultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:210:70: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  210 |     ConstraintParams& setLambda(MultiVecDerivId lambda) { m_lambda = lambda;   return *this; }
      |                                                                      ^~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:28,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h: In member function ‘sofa::core::MechanicalParams& sofa::core::MechanicalParams::setX(sofa::core::ConstMultiVecCoordId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h:198:79: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  198 |     MechanicalParams& setX(                   ConstMultiVecCoordId v) { m_x = v;   return *this; }
      |                                                                               ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_COORD; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:28,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h: In member function ‘sofa::core::MechanicalParams& sofa::core::MechanicalParams::setV(sofa::core::ConstMultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h:204:79: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  204 |     MechanicalParams& setV(                   ConstMultiVecDerivId v) { m_v = v;   return *this; }
      |                                                                               ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:28,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h: In member function ‘sofa::core::MechanicalParams& sofa::core::MechanicalParams::setF(sofa::core::ConstMultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h:210:79: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  210 |     MechanicalParams& setF(                   ConstMultiVecDerivId v) { m_f = v;   return *this; }
      |                                                                               ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:28,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h: In member function ‘sofa::core::MechanicalParams& sofa::core::MechanicalParams::setDx(sofa::core::ConstMultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h:216:81: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  216 |     MechanicalParams& setDx(                   ConstMultiVecDerivId v) { m_dx = v;   return *this; }
      |                                                                                 ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:28,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h: In member function ‘sofa::core::MechanicalParams& sofa::core::MechanicalParams::setDf(sofa::core::ConstMultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h:222:81: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  222 |     MechanicalParams& setDf(                   ConstMultiVecDerivId v) { m_df = v;   return *this; }
      |                                                                                 ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:41,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/visual/VisualParams.h: In member function ‘sofa::core::visual::VisualParams& sofa::core::visual::VisualParams::setX(sofa::core::ConstMultiVecCoordId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/visual/VisualParams.h:108:75: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  108 |     VisualParams& setX(                   ConstMultiVecCoordId v) { m_x = v;    return *this; }
      |                                                                           ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_COORD; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:41,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/visual/VisualParams.h: In member function ‘sofa::core::visual::VisualParams& sofa::core::visual::VisualParams::setV(sofa::core::ConstMultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/visual/VisualParams.h:114:75: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  114 |     VisualParams& setV(                   ConstMultiVecDerivId v) { m_v = v;    return *this; }
      |                                                                           ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /usr/local/include/CGAL/N_step_adaptor_derived.h:20,
                 from /usr/local/include/CGAL/Polyhedron_3.h:26,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:45,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/usr/local/include/CGAL/iterator.h: At global scope:
/usr/local/include/CGAL/iterator.h:663:16: error: ‘decay_t’ in namespace ‘std’ does not name a template type; did you mean ‘decay’?
  663 |   typedef std::decay_t<typename cpp11::result_of<Op(arg_type)>::type> value_type;
      |                ^~~~~~~
      |                decay
/usr/local/include/CGAL/iterator.h:665:11: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  665 |   typedef value_type const*                                     pointer;
      |           ^~~~~~~~~~
      |           arg_type
/usr/local/include/CGAL/iterator.h:666:11: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  666 |   typedef value_type const&                                     reference;
      |           ^~~~~~~~~~
      |           arg_type
/usr/local/include/CGAL/iterator.h:671:11: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  671 |   mutable value_type val;  // Note: mutable is needed because we want to
      |           ^~~~~~~~~~
      |           arg_type
/usr/local/include/CGAL/iterator.h:699:9: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  699 |   const value_type& operator*() const {
      |         ^~~~~~~~~~
      |         arg_type
/usr/local/include/CGAL/iterator.h:715:9: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  715 |   const value_type& operator[](difference_type i) const {
      |         ^~~~~~~~~~
      |         arg_type
/usr/local/include/CGAL/iterator.h:1321:44: error: ‘std::index_sequence’ has not been declared
 1321 | auto to_tuple(std::tuple<Args...> &t, std::index_sequence<Is...>)
      |                                            ^~~~~~~~~~~~~~
/usr/local/include/CGAL/iterator.h:1321:58: error: expected ‘,’ or ‘...’ before ‘<’ token
 1321 | auto to_tuple(std::tuple<Args...> &t, std::index_sequence<Is...>)
      |                                                          ^
/usr/local/include/CGAL/iterator.h:1321:1: error: ‘to_tuple’ function uses ‘auto’ type specifier without trailing return type
 1321 | auto to_tuple(std::tuple<Args...> &t, std::index_sequence<Is...>)
      | ^~~~
/usr/local/include/CGAL/iterator.h:1321:1: note: deduced return type only available with ‘-std=c++14’ or ‘-std=gnu++14’
/usr/local/include/CGAL/iterator.h: In member function ‘CGAL::Dispatch_output_iterator<std::tuple<_Tps ...>, std::tuple<_Args2 ...> >::operator std::tuple<O& ...>()’:
/usr/local/include/CGAL/iterator.h:1414:49: error: ‘index_sequence_for’ is not a member of ‘std’
 1414 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                 ^~~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/iterator.h:1414:69: error: expected primary-expression before ‘...’ token
 1414 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                                     ^~~
/usr/local/include/CGAL/iterator.h: In member function ‘CGAL::Dispatch_output_iterator<std::tuple<_Tps ...>, std::tuple<_Args2 ...> >::operator std::tuple<const O& ...>() const’:
/usr/local/include/CGAL/iterator.h:1419:49: error: ‘index_sequence_for’ is not a member of ‘std’
 1419 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                 ^~~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/iterator.h:1419:69: error: expected primary-expression before ‘...’ token
 1419 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                                     ^~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h: In instantiation of ‘void sofa::core::TMultiVecId<vtype, vaccess>::assign(const MyVecId&) [with sofa::core::VecType vtype = sofa::core::V_MATDERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE; sofa::core::TMultiVecId<vtype, vaccess>::MyVecId = sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>]’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:197:64:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:299:19: warning: implicitly-declared ‘sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>& sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  299 |         defaultId = id;
      |         ~~~~~~~~~~^~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/VecId.h:266:5: note: because ‘sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TVecId<vtype, vaccess>::TVecId(const sofa::core::TVecId<vtype, sofa::core::V_WRITE>&) [with sofa::core::VecType vtype = sofa::core::V_MATDERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  266 |     TVecId(const TVecId<vtype, V_WRITE>& v) : BaseVecId(vtype, v.getIndex()) { }
      |     ^~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h: In instantiation of ‘void sofa::core::TMultiVecId<vtype, vaccess>::assign(const MyVecId&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE; sofa::core::TMultiVecId<vtype, vaccess>::MyVecId = sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>]’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:203:65:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:299:19: warning: implicitly-declared ‘sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>& sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  299 |         defaultId = id;
      |         ~~~~~~~~~~^~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/initCGALPlugin.cpp:24:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/VecId.h:266:5: note: because ‘sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TVecId<vtype, vaccess>::TVecId(const sofa::core::TVecId<vtype, sofa::core::V_WRITE>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  266 |     TVecId(const TVecId<vtype, V_WRITE>& v) : BaseVecId(vtype, v.getIndex()) { }
      |     ^~~~~~
[14/19] Building CXX object applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/DecimateMesh.cpp.o
FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/DecimateMesh.cpp.o 
/usr/bin/c++  -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -Iinclude -I/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin -I/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/.. -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen -I/home/owen/Softwares/sofa/src/SofaKernel/extlibs/json -I/home/owen/Softwares/sofa/src/extlibs/gtest/include -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/owen/Softwares/sofa/src/SofaKernel/SofaSimulation/../modules -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaSimulationCore/src -I/home/owen/Softwares/sofa/src/applications/plugins/CImgPlugin/src -I/home/owen/Softwares/sofa/src/applications/plugins/CImgPlugin/extlibs/CImg/.. -Wall -W -O3 -DNDEBUG -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -fPIC   -DSOFA_BUILD_CGALPLUGIN -DFRAMEWORK_TEST_RESOURCES_DIR=\"/home/owen/Softwares/sofa/src/SofaKernel/SofaFramework/resources/tests\" -pthread -DGTEST_LINKED_AS_SHARED_LIBRARY=1 -Dcimg_use_tiff -Dcimg_use_jpeg -Dcimg_use_png -DPNG_SKIP_SETJMP_CHECK -Dcimg_no_system_calls -std=gnu++11 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/DecimateMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/DecimateMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/DecimateMesh.cpp.o -c /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/DecimateMesh.cpp
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:326,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/DecimateMesh.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/DecimateMesh.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/DecimateMesh.cpp:31:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In member function ‘void Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::operator()(Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::ResScalar*, Index, const LhsScalar*, const RhsScalar*, Index, Index, Index, Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::ResScalar, Index, Index, Index, Index, RhsScalar*)’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:574:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  574 |         if(nr==4) traits.initAcc(C3);
      |         ^~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:575:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  575 |                   traits.initAcc(C4);
      |                   ^~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:946:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  946 |         if(nr==4) R3 = ploadu<ResPacket>(r3);
      |         ^~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:948:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  948 |                   traits.acc(C0, alphav, R0);
      |                   ^~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:951:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  951 |         if(nr==4) traits.acc(C3, alphav, R3);
      |         ^~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:953:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  953 |                   pstoreu(r0, R0);
      |                   ^~~~~~~
In file included from /usr/local/include/CGAL/Kernel/global_functions.h:25,
                 from /usr/local/include/CGAL/Cartesian/Cartesian_base.h:22,
                 from /usr/local/include/CGAL/Simple_cartesian.h:20,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/DecimateMesh.h:40,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/DecimateMesh.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/DecimateMesh.cpp:31:
/usr/local/include/CGAL/Kernel/hash_functions.h: At global scope:
/usr/local/include/CGAL/Kernel/hash_functions.h:25:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   25 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:47:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   47 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:57:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   57 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:66:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   66 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:75:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   75 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:84:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   84 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:93:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   93 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:102:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  102 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:126:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  126 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:135:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  135 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:145:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  145 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:154:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  154 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:164:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  164 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:174:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  174 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
In file included from /usr/local/include/CGAL/N_step_adaptor_derived.h:20,
                 from /usr/local/include/CGAL/Polyhedron_3.h:26,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/DecimateMesh.h:41,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/DecimateMesh.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/DecimateMesh.cpp:31:
/usr/local/include/CGAL/iterator.h:663:16: error: ‘decay_t’ in namespace ‘std’ does not name a template type; did you mean ‘decay’?
  663 |   typedef std::decay_t<typename cpp11::result_of<Op(arg_type)>::type> value_type;
      |                ^~~~~~~
      |                decay
/usr/local/include/CGAL/iterator.h:665:11: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  665 |   typedef value_type const*                                     pointer;
      |           ^~~~~~~~~~
      |           arg_type
/usr/local/include/CGAL/iterator.h:666:11: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  666 |   typedef value_type const&                                     reference;
      |           ^~~~~~~~~~
      |           arg_type
/usr/local/include/CGAL/iterator.h:671:11: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  671 |   mutable value_type val;  // Note: mutable is needed because we want to
      |           ^~~~~~~~~~
      |           arg_type
/usr/local/include/CGAL/iterator.h:699:9: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  699 |   const value_type& operator*() const {
      |         ^~~~~~~~~~
      |         arg_type
/usr/local/include/CGAL/iterator.h:715:9: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  715 |   const value_type& operator[](difference_type i) const {
      |         ^~~~~~~~~~
      |         arg_type
/usr/local/include/CGAL/iterator.h:1321:44: error: ‘std::index_sequence’ has not been declared
 1321 | auto to_tuple(std::tuple<Args...> &t, std::index_sequence<Is...>)
      |                                            ^~~~~~~~~~~~~~
/usr/local/include/CGAL/iterator.h:1321:58: error: expected ‘,’ or ‘...’ before ‘<’ token
 1321 | auto to_tuple(std::tuple<Args...> &t, std::index_sequence<Is...>)
      |                                                          ^
/usr/local/include/CGAL/iterator.h:1321:1: error: ‘to_tuple’ function uses ‘auto’ type specifier without trailing return type
 1321 | auto to_tuple(std::tuple<Args...> &t, std::index_sequence<Is...>)
      | ^~~~
/usr/local/include/CGAL/iterator.h:1321:1: note: deduced return type only available with ‘-std=c++14’ or ‘-std=gnu++14’
/usr/local/include/CGAL/iterator.h: In member function ‘CGAL::Dispatch_output_iterator<std::tuple<_Tps ...>, std::tuple<_Args2 ...> >::operator std::tuple<O& ...>()’:
/usr/local/include/CGAL/iterator.h:1414:49: error: ‘index_sequence_for’ is not a member of ‘std’
 1414 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                 ^~~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/iterator.h:1414:69: error: expected primary-expression before ‘...’ token
 1414 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                                     ^~~
/usr/local/include/CGAL/iterator.h: In member function ‘CGAL::Dispatch_output_iterator<std::tuple<_Tps ...>, std::tuple<_Args2 ...> >::operator std::tuple<const O& ...>() const’:
/usr/local/include/CGAL/iterator.h:1419:49: error: ‘index_sequence_for’ is not a member of ‘std’
 1419 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                 ^~~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/iterator.h:1419:69: error: expected primary-expression before ‘...’ token
 1419 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                                     ^~~
[15/19] Building CXX object applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/MeshGenerationFromImage.cpp.o
FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/MeshGenerationFromImage.cpp.o 
/usr/bin/c++  -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -Iinclude -I/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin -I/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/.. -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen -I/home/owen/Softwares/sofa/src/SofaKernel/extlibs/json -I/home/owen/Softwares/sofa/src/extlibs/gtest/include -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/owen/Softwares/sofa/src/SofaKernel/SofaSimulation/../modules -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaSimulationCore/src -I/home/owen/Softwares/sofa/src/applications/plugins/CImgPlugin/src -I/home/owen/Softwares/sofa/src/applications/plugins/CImgPlugin/extlibs/CImg/.. -Wall -W -O3 -DNDEBUG -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -fPIC   -DSOFA_BUILD_CGALPLUGIN -DFRAMEWORK_TEST_RESOURCES_DIR=\"/home/owen/Softwares/sofa/src/SofaKernel/SofaFramework/resources/tests\" -pthread -DGTEST_LINKED_AS_SHARED_LIBRARY=1 -Dcimg_use_tiff -Dcimg_use_jpeg -Dcimg_use_png -DPNG_SKIP_SETJMP_CHECK -Dcimg_no_system_calls -std=gnu++11 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/MeshGenerationFromImage.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/MeshGenerationFromImage.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/MeshGenerationFromImage.cpp.o -c /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromImage.cpp
In file included from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromImage.inl:24,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromImage.cpp:25:
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromImage.h:43:10: fatal error: CGAL/Weighted_point.h: No such file or directory
   43 | #include <CGAL/Weighted_point.h>
      |          ^~~~~~~~~~~~~~~~~~~~~~~
compilation terminated.
[16/19] Building CXX object applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/TriangularConvexHull3D.cpp.o
FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/TriangularConvexHull3D.cpp.o 
/usr/bin/c++  -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -Iinclude -I/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin -I/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/.. -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen -I/home/owen/Softwares/sofa/src/SofaKernel/extlibs/json -I/home/owen/Softwares/sofa/src/extlibs/gtest/include -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/owen/Softwares/sofa/src/SofaKernel/SofaSimulation/../modules -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaSimulationCore/src -I/home/owen/Softwares/sofa/src/applications/plugins/CImgPlugin/src -I/home/owen/Softwares/sofa/src/applications/plugins/CImgPlugin/extlibs/CImg/.. -Wall -W -O3 -DNDEBUG -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -fPIC   -DSOFA_BUILD_CGALPLUGIN -DFRAMEWORK_TEST_RESOURCES_DIR=\"/home/owen/Softwares/sofa/src/SofaKernel/SofaFramework/resources/tests\" -pthread -DGTEST_LINKED_AS_SHARED_LIBRARY=1 -Dcimg_use_tiff -Dcimg_use_jpeg -Dcimg_use_png -DPNG_SKIP_SETJMP_CHECK -Dcimg_no_system_calls -std=gnu++11 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/TriangularConvexHull3D.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/TriangularConvexHull3D.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/TriangularConvexHull3D.cpp.o -c /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/TriangularConvexHull3D.cpp
In file included from /usr/local/include/CGAL/Kernel/global_functions.h:25,
                 from /usr/local/include/CGAL/Cartesian/Cartesian_base.h:22,
                 from /usr/local/include/CGAL/Simple_cartesian.h:20,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:20,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/TriangularConvexHull3D.inl:32,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/TriangularConvexHull3D.cpp:31:
/usr/local/include/CGAL/Kernel/hash_functions.h:25:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   25 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:47:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   47 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:57:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   57 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:66:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   66 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:75:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   75 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:84:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   84 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:93:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   93 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:102:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  102 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:126:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  126 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:135:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  135 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:145:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  145 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:154:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  154 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:164:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  164 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:174:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  174 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/TriangularConvexHull3D.inl:32,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/TriangularConvexHull3D.cpp:31:
/usr/local/include/CGAL/Lazy.h:108:30: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  108 | template<class T>inline std::enable_if_t<std::is_arithmetic<T>::value||std::is_enum<T>::value, T> approx(T d){return d;}
      |                              ^~~~~~~~~~~
      |                              enable_if
/usr/local/include/CGAL/Lazy.h:109:30: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  109 | template<class T>inline std::enable_if_t<std::is_arithmetic<T>::value||std::is_enum<T>::value, T> exact (T d){return d;}
      |                              ^~~~~~~~~~~
      |                              enable_if
/usr/local/include/CGAL/Lazy.h:110:30: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  110 | template<class T>inline std::enable_if_t<std::is_arithmetic<T>::value||std::is_enum<T>::value, unsigned> depth(T){return 0;}
      |                              ^~~~~~~~~~~
      |                              enable_if
/usr/local/include/CGAL/Lazy.h:113:30: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  113 | template<class T>inline std::enable_if_t<std::is_empty<T>::value, T> exact(T){return {};}
      |                              ^~~~~~~~~~~
      |                              enable_if
/usr/local/include/CGAL/Lazy.h:114:30: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  114 | template<class T>inline std::enable_if_t<std::is_empty<T>::value, T> approx(T){return {};}
      |                              ^~~~~~~~~~~
      |                              enable_if
/usr/local/include/CGAL/Lazy.h:115:30: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  115 | template<class T>inline std::enable_if_t<std::is_empty<T>::value, unsigned> depth(T){return 0;}
      |                              ^~~~~~~~~~~
      |                              enable_if
/usr/local/include/CGAL/Lazy.h:118:31: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  118 | template <class T, class=std::enable_if_t<is_iterator_type<T,std::input_iterator_tag>::value>>
      |                               ^~~~~~~~~~~
      |                               enable_if
/usr/local/include/CGAL/Lazy.h:118:42: error: expected ‘>’ before ‘<’ token
  118 | template <class T, class=std::enable_if_t<is_iterator_type<T,std::input_iterator_tag>::value>>
      |                                          ^
/usr/local/include/CGAL/Lazy.h:119:1: error: ‘exact’ function uses ‘auto’ type specifier without trailing return type
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      | ^~~~
/usr/local/include/CGAL/Lazy.h:119:1: note: deduced return type only available with ‘-std=c++14’ or ‘-std=gnu++14’
/usr/local/include/CGAL/Lazy.h: In function ‘auto CGAL::exact(const T&)’:
/usr/local/include/CGAL/Lazy.h:119:64: error: use of ‘auto’ in lambda parameter declaration only available with ‘-std=c++14’ or ‘-std=gnu++14’
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      |                                                                ^~~~
/usr/local/include/CGAL/Lazy.h: In lambda function:
/usr/local/include/CGAL/Lazy.h:119:98: error: no matching function for call to ‘exact(const int&)’
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      |                                                                                                  ^
/usr/local/include/CGAL/Lazy.h:84:1: note: candidate: ‘template<class AT, class ET, class E2A> const ET& CGAL::exact(const CGAL::Lazy<AT, ET, E2A>&)’
   84 | exact(const Lazy<AT,ET,E2A>& l)
      | ^~~~~
/usr/local/include/CGAL/Lazy.h:84:1: note:   template argument deduction/substitution failed:
/usr/local/include/CGAL/Lazy.h:119:98: note:   mismatched types ‘const CGAL::Lazy<AT, ET, E2A>’ and ‘const int’
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      |                                                                                                  ^
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::exact(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const int’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::exact(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const int’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note: candidate: ‘template<class T, class> auto CGAL::exact(const T&)’
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      |      ^~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note:   template argument deduction/substitution failed:
/usr/local/include/CGAL/Lazy.h: At global scope:
/usr/local/include/CGAL/Lazy.h:120:31: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  120 | template <class T, class=std::enable_if_t<is_iterator_type<T,std::input_iterator_tag>::value>>
      |                               ^~~~~~~~~~~
      |                               enable_if
/usr/local/include/CGAL/Lazy.h:120:42: error: expected ‘>’ before ‘<’ token
  120 | template <class T, class=std::enable_if_t<is_iterator_type<T,std::input_iterator_tag>::value>>
      |                                          ^
/usr/local/include/CGAL/Lazy.h:121:1: error: ‘approx’ function uses ‘auto’ type specifier without trailing return type
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      | ^~~~
/usr/local/include/CGAL/Lazy.h:121:1: note: deduced return type only available with ‘-std=c++14’ or ‘-std=gnu++14’
/usr/local/include/CGAL/Lazy.h: In function ‘auto CGAL::approx(const T&)’:
/usr/local/include/CGAL/Lazy.h:121:65: error: use of ‘auto’ in lambda parameter declaration only available with ‘-std=c++14’ or ‘-std=gnu++14’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |                                                                 ^~~~
/usr/local/include/CGAL/Lazy.h: In lambda function:
/usr/local/include/CGAL/Lazy.h:121:100: error: no matching function for call to ‘approx(const int&)’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |                                                                                                    ^
/usr/local/include/CGAL/Lazy.h:66:1: note: candidate: ‘template<class AT, class ET, class E2A> const AT& CGAL::approx(const CGAL::Lazy<AT, ET, E2A>&)’
   66 | approx(const Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:66:1: note:   template argument deduction/substitution failed:
/usr/local/include/CGAL/Lazy.h:121:100: note:   mismatched types ‘const CGAL::Lazy<AT, ET, E2A>’ and ‘const int’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |                                                                                                    ^
/usr/local/include/CGAL/Lazy.h:75:1: note: candidate: ‘template<class AT, class ET, class E2A> AT& CGAL::approx(CGAL::Lazy<AT, ET, E2A>&)’
   75 | approx(Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:75:1: note:   template argument deduction/substitution failed:
/usr/local/include/CGAL/Lazy.h:121:100: note:   mismatched types ‘CGAL::Lazy<AT, ET, E2A>’ and ‘const int’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |                                                                                                    ^
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::approx(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const int’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::approx(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const int’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note: candidate: ‘template<class T, class> auto CGAL::approx(const T&)’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |      ^~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note:   template argument deduction/substitution failed:
/usr/local/include/CGAL/Lazy.h: At global scope:
/usr/local/include/CGAL/Lazy.h:122:31: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  122 | template <class T, class=std::enable_if_t<is_iterator_type<T,std::input_iterator_tag>::value>>
      |                               ^~~~~~~~~~~
      |                               enable_if
/usr/local/include/CGAL/Lazy.h:122:42: error: expected ‘>’ before ‘<’ token
  122 | template <class T, class=std::enable_if_t<is_iterator_type<T,std::input_iterator_tag>::value>>
      |                                          ^
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/TriangularConvexHull3D.inl:32,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/TriangularConvexHull3D.cpp:31:
/usr/local/include/CGAL/Lazy.h:320:33: error: ‘std::index_sequence’ has not been declared
  320 |   void update_exact_helper(std::index_sequence<I...>) const {
      |                                 ^~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:320:47: error: expected ‘,’ or ‘...’ before ‘<’ token
  320 |   void update_exact_helper(std::index_sequence<I...>) const {
      |                                               ^
/usr/local/include/CGAL/Lazy.h: In member function ‘void CGAL::Lazy_rep_n<AT, ET, AC, EC, E2A, L>::update_exact() const’:
/usr/local/include/CGAL/Lazy.h:327:30: error: ‘make_index_sequence’ is not a member of ‘std’
  327 |     update_exact_helper(std::make_index_sequence<sizeof...(L)>{});
      |                              ^~~~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:327:63: error: expected primary-expression before ‘{’ token
  327 |     update_exact_helper(std::make_index_sequence<sizeof...(L)>{});
      |                                                               ^
/usr/local/include/CGAL/Lazy.h: At global scope:
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:39: error: ‘remove_reference_t’ is not a member of ‘std’; did you mean ‘remove_reference’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                       ^~~~~~~~~~~~~~~~~~
      |                                       remove_reference
/usr/local/include/CGAL/Lazy.h:831:89: error: template argument 1 is invalid
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                                                                         ^~
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:39: error: ‘remove_reference_t’ is not a member of ‘std’; did you mean ‘remove_reference’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                       ^~~~~~~~~~~~~~~~~~
      |                                       remove_reference
/usr/local/include/CGAL/Lazy.h:831:89: error: template argument 1 is invalid
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                                                                         ^~
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:39: error: ‘remove_reference_t’ is not a member of ‘std’; did you mean ‘remove_reference’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                       ^~~~~~~~~~~~~~~~~~
      |                                       remove_reference
/usr/local/include/CGAL/Lazy.h:831:89: error: template argument 1 is invalid
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                                                                         ^~
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:39: error: ‘remove_reference_t’ is not a member of ‘std’; did you mean ‘remove_reference’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                       ^~~~~~~~~~~~~~~~~~
      |                                       remove_reference
/usr/local/include/CGAL/Lazy.h:831:89: error: template argument 1 is invalid
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                                                                         ^~
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:39: error: ‘remove_reference_t’ is not a member of ‘std’; did you mean ‘remove_reference’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                       ^~~~~~~~~~~~~~~~~~
      |                                       remove_reference
/usr/local/include/CGAL/Lazy.h:831:89: error: template argument 1 is invalid
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                                                                         ^~
/usr/local/include/CGAL/Lazy.h:831:3: error: invalid use of template-name ‘CGAL::Lazy_exact_nt’ without an argument list
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |   ^~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:831:3: note: class template argument deduction is only available with ‘-std=c++17’ or ‘-std=gnu++17’
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/TriangularConvexHull3D.inl:32,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/TriangularConvexHull3D.cpp:31:
/usr/local/include/CGAL/Lazy.h:61:7: note: ‘template<class ET_> class CGAL::Lazy_exact_nt’ declared here
   61 | class Lazy_exact_nt;
      |       ^~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/TriangularConvexHull3D.inl:32,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/TriangularConvexHull3D.cpp:31:
/usr/local/include/CGAL/Lazy.h:831:16: error: expected initializer before ‘<’ token
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                ^
In file included from /usr/local/include/CGAL/point_generators_2.h:29,
                 from /usr/local/include/CGAL/point_generators_3.h:26,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/TriangularConvexHull3D.inl:33,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/TriangularConvexHull3D.cpp:31:
/usr/local/include/CGAL/iterator.h:663:16: error: ‘decay_t’ in namespace ‘std’ does not name a template type; did you mean ‘decay’?
  663 |   typedef std::decay_t<typename cpp11::result_of<Op(arg_type)>::type> value_type;
      |                ^~~~~~~
      |                decay
/usr/local/include/CGAL/iterator.h:665:11: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  665 |   typedef value_type const*                                     pointer;
      |           ^~~~~~~~~~
      |           arg_type
/usr/local/include/CGAL/iterator.h:666:11: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  666 |   typedef value_type const&                                     reference;
      |           ^~~~~~~~~~
      |           arg_type
/usr/local/include/CGAL/iterator.h:671:11: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  671 |   mutable value_type val;  // Note: mutable is needed because we want to
      |           ^~~~~~~~~~
      |           arg_type
/usr/local/include/CGAL/iterator.h:699:9: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  699 |   const value_type& operator*() const {
      |         ^~~~~~~~~~
      |         arg_type
/usr/local/include/CGAL/iterator.h:715:9: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  715 |   const value_type& operator[](difference_type i) const {
      |         ^~~~~~~~~~
      |         arg_type
/usr/local/include/CGAL/iterator.h:1321:44: error: ‘std::index_sequence’ has not been declared
 1321 | auto to_tuple(std::tuple<Args...> &t, std::index_sequence<Is...>)
      |                                            ^~~~~~~~~~~~~~
/usr/local/include/CGAL/iterator.h:1321:58: error: expected ‘,’ or ‘...’ before ‘<’ token
 1321 | auto to_tuple(std::tuple<Args...> &t, std::index_sequence<Is...>)
      |                                                          ^
/usr/local/include/CGAL/iterator.h:1321:1: error: ‘to_tuple’ function uses ‘auto’ type specifier without trailing return type
 1321 | auto to_tuple(std::tuple<Args...> &t, std::index_sequence<Is...>)
      | ^~~~
/usr/local/include/CGAL/iterator.h:1321:1: note: deduced return type only available with ‘-std=c++14’ or ‘-std=gnu++14’
/usr/local/include/CGAL/iterator.h: In member function ‘CGAL::Dispatch_output_iterator<std::tuple<_Tps ...>, std::tuple<_Args2 ...> >::operator std::tuple<O& ...>()’:
/usr/local/include/CGAL/iterator.h:1414:49: error: ‘index_sequence_for’ is not a member of ‘std’
 1414 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                 ^~~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/iterator.h:1414:69: error: expected primary-expression before ‘...’ token
 1414 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                                     ^~~
/usr/local/include/CGAL/iterator.h: In member function ‘CGAL::Dispatch_output_iterator<std::tuple<_Tps ...>, std::tuple<_Args2 ...> >::operator std::tuple<const O& ...>() const’:
/usr/local/include/CGAL/iterator.h:1419:49: error: ‘index_sequence_for’ is not a member of ‘std’
 1419 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                 ^~~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/iterator.h:1419:69: error: expected primary-expression before ‘...’ token
 1419 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                                     ^~~
[17/19] Building CXX object applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/MeshGenerationFromPolyhedron.cpp.o
FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/MeshGenerationFromPolyhedron.cpp.o 
/usr/bin/c++  -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -Iinclude -I/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin -I/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/.. -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -I/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen -I/home/owen/Softwares/sofa/src/SofaKernel/extlibs/json -I/home/owen/Softwares/sofa/src/extlibs/gtest/include -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/owen/Softwares/sofa/src/SofaKernel/SofaSimulation/../modules -I/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaSimulationCore/src -I/home/owen/Softwares/sofa/src/applications/plugins/CImgPlugin/src -I/home/owen/Softwares/sofa/src/applications/plugins/CImgPlugin/extlibs/CImg/.. -Wall -W -O3 -DNDEBUG -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -fPIC   -DSOFA_BUILD_CGALPLUGIN -DFRAMEWORK_TEST_RESOURCES_DIR=\"/home/owen/Softwares/sofa/src/SofaKernel/SofaFramework/resources/tests\" -pthread -DGTEST_LINKED_AS_SHARED_LIBRARY=1 -Dcimg_use_tiff -Dcimg_use_jpeg -Dcimg_use_png -DPNG_SKIP_SETJMP_CHECK -Dcimg_no_system_calls -std=gnu++11 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/MeshGenerationFromPolyhedron.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/MeshGenerationFromPolyhedron.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/MeshGenerationFromPolyhedron.cpp.o -c /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:326,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In member function ‘void Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::operator()(Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::ResScalar*, Index, const LhsScalar*, const RhsScalar*, Index, Index, Index, Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::ResScalar, Index, Index, Index, Index, RhsScalar*)’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:574:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  574 |         if(nr==4) traits.initAcc(C3);
      |         ^~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:575:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  575 |                   traits.initAcc(C4);
      |                   ^~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:946:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  946 |         if(nr==4) R3 = ploadu<ResPacket>(r3);
      |         ^~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:948:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  948 |                   traits.acc(C0, alphav, R0);
      |                   ^~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:951:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  951 |         if(nr==4) traits.acc(C3, alphav, R3);
      |         ^~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/products/GeneralBlockPanelKernel.h:953:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  953 |                   pstoreu(r0, R0);
      |                   ^~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setX(sofa::core::ConstMultiVecCoordId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:186:79: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  186 |     ConstraintParams& setX(                   ConstMultiVecCoordId v) { m_x = v;   return *this; }
      |                                                                               ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_COORD; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setV(sofa::core::ConstMultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:192:79: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  192 |     ConstraintParams& setV(                   ConstMultiVecDerivId v) { m_v = v;   return *this; }
      |                                                                               ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setJ(sofa::core::MultiMatrixDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:198:58: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  198 |     ConstraintParams& setJ(MultiMatrixDerivId j) { m_j = j; return *this; }
      |                                                          ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_MATDERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h: In member function ‘sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>&)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:175:7: warning: implicitly-declared ‘sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>& sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  175 | class TMultiVecId
      |       ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/VecId.h:266:5: note: because ‘sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TVecId<vtype, vaccess>::TVecId(const sofa::core::TVecId<vtype, sofa::core::V_WRITE>&) [with sofa::core::VecType vtype = sofa::core::V_MATDERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  266 |     TVecId(const TVecId<vtype, V_WRITE>& v) : BaseVecId(vtype, v.getIndex()) { }
      |     ^~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setJ(sofa::core::MultiMatrixDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:198:58: note: synthesized method ‘sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>&)’ first required here
  198 |     ConstraintParams& setJ(MultiMatrixDerivId j) { m_j = j; return *this; }
      |                                                          ^
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setDx(sofa::core::MultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:204:58: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  204 |     ConstraintParams& setDx(MultiVecDerivId dx) { m_dx = dx;   return *this; }
      |                                                          ^~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h: In member function ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>&)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:175:7: warning: implicitly-declared ‘sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>& sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  175 | class TMultiVecId
      |       ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/VecId.h:266:5: note: because ‘sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TVecId<vtype, vaccess>::TVecId(const sofa::core::TVecId<vtype, sofa::core::V_WRITE>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  266 |     TVecId(const TVecId<vtype, V_WRITE>& v) : BaseVecId(vtype, v.getIndex()) { }
      |     ^~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setDx(sofa::core::MultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:204:58: note: synthesized method ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>&)’ first required here
  204 |     ConstraintParams& setDx(MultiVecDerivId dx) { m_dx = dx;   return *this; }
      |                                                          ^~
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h: In member function ‘sofa::core::ConstraintParams& sofa::core::ConstraintParams::setLambda(sofa::core::MultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:210:70: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  210 |     ConstraintParams& setLambda(MultiVecDerivId lambda) { m_lambda = lambda;   return *this; }
      |                                                                      ^~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:28,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h: In member function ‘sofa::core::MechanicalParams& sofa::core::MechanicalParams::setX(sofa::core::ConstMultiVecCoordId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h:198:79: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  198 |     MechanicalParams& setX(                   ConstMultiVecCoordId v) { m_x = v;   return *this; }
      |                                                                               ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_COORD; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:28,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h: In member function ‘sofa::core::MechanicalParams& sofa::core::MechanicalParams::setV(sofa::core::ConstMultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h:204:79: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  204 |     MechanicalParams& setV(                   ConstMultiVecDerivId v) { m_v = v;   return *this; }
      |                                                                               ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:28,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h: In member function ‘sofa::core::MechanicalParams& sofa::core::MechanicalParams::setF(sofa::core::ConstMultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h:210:79: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  210 |     MechanicalParams& setF(                   ConstMultiVecDerivId v) { m_f = v;   return *this; }
      |                                                                               ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:28,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h: In member function ‘sofa::core::MechanicalParams& sofa::core::MechanicalParams::setDx(sofa::core::ConstMultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h:216:81: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  216 |     MechanicalParams& setDx(                   ConstMultiVecDerivId v) { m_dx = v;   return *this; }
      |                                                                                 ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseMapping.h:28,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/Mapping.h:25,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Node.h:51,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/Simulation.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h: In member function ‘sofa::core::MechanicalParams& sofa::core::MechanicalParams::setDf(sofa::core::ConstMultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MechanicalParams.h:222:81: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  222 |     MechanicalParams& setDf(                   ConstMultiVecDerivId v) { m_df = v;   return *this; }
      |                                                                                 ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:41,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/visual/VisualParams.h: In member function ‘sofa::core::visual::VisualParams& sofa::core::visual::VisualParams::setX(sofa::core::ConstMultiVecCoordId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/visual/VisualParams.h:108:75: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  108 |     VisualParams& setX(                   ConstMultiVecCoordId v) { m_x = v;    return *this; }
      |                                                                           ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_COORD, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_COORD; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:41,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/visual/VisualParams.h: In member function ‘sofa::core::visual::VisualParams& sofa::core::visual::VisualParams::setV(sofa::core::ConstMultiVecDerivId)’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/visual/VisualParams.h:114:75: warning: implicitly-declared ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>& sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>::operator=(const sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>&)’ is deprecated [-Wdeprecated-copy]
  114 |     VisualParams& setV(                   ConstMultiVecDerivId v) { m_v = v;    return *this; }
      |                                                                           ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:231:5: note: because ‘sofa::core::TMultiVecId<sofa::core::V_DERIV, sofa::core::V_READ>’ has user-provided ‘sofa::core::TMultiVecId<vtype, vaccess>::TMultiVecId(const sofa::core::TMultiVecId<vtype, vaccess>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_READ]’
  231 |     TMultiVecId( const TMultiVecId<vtype,vaccess>& mv)
      |     ^~~~~~~~~~~
In file included from /usr/local/include/CGAL/N_step_adaptor_derived.h:20,
                 from /usr/local/include/CGAL/Polyhedron_3.h:26,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:45,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/iterator.h: At global scope:
/usr/local/include/CGAL/iterator.h:663:16: error: ‘decay_t’ in namespace ‘std’ does not name a template type; did you mean ‘decay’?
  663 |   typedef std::decay_t<typename cpp11::result_of<Op(arg_type)>::type> value_type;
      |                ^~~~~~~
      |                decay
/usr/local/include/CGAL/iterator.h:665:11: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  665 |   typedef value_type const*                                     pointer;
      |           ^~~~~~~~~~
      |           arg_type
/usr/local/include/CGAL/iterator.h:666:11: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  666 |   typedef value_type const&                                     reference;
      |           ^~~~~~~~~~
      |           arg_type
/usr/local/include/CGAL/iterator.h:671:11: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  671 |   mutable value_type val;  // Note: mutable is needed because we want to
      |           ^~~~~~~~~~
      |           arg_type
/usr/local/include/CGAL/iterator.h:699:9: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  699 |   const value_type& operator*() const {
      |         ^~~~~~~~~~
      |         arg_type
/usr/local/include/CGAL/iterator.h:715:9: error: ‘value_type’ does not name a type; did you mean ‘arg_type’?
  715 |   const value_type& operator[](difference_type i) const {
      |         ^~~~~~~~~~
      |         arg_type
/usr/local/include/CGAL/iterator.h:1321:44: error: ‘std::index_sequence’ has not been declared
 1321 | auto to_tuple(std::tuple<Args...> &t, std::index_sequence<Is...>)
      |                                            ^~~~~~~~~~~~~~
/usr/local/include/CGAL/iterator.h:1321:58: error: expected ‘,’ or ‘...’ before ‘<’ token
 1321 | auto to_tuple(std::tuple<Args...> &t, std::index_sequence<Is...>)
      |                                                          ^
/usr/local/include/CGAL/iterator.h:1321:1: error: ‘to_tuple’ function uses ‘auto’ type specifier without trailing return type
 1321 | auto to_tuple(std::tuple<Args...> &t, std::index_sequence<Is...>)
      | ^~~~
/usr/local/include/CGAL/iterator.h:1321:1: note: deduced return type only available with ‘-std=c++14’ or ‘-std=gnu++14’
/usr/local/include/CGAL/iterator.h: In member function ‘CGAL::Dispatch_output_iterator<std::tuple<_Tps ...>, std::tuple<_Args2 ...> >::operator std::tuple<O& ...>()’:
/usr/local/include/CGAL/iterator.h:1414:49: error: ‘index_sequence_for’ is not a member of ‘std’
 1414 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                 ^~~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/iterator.h:1414:69: error: expected primary-expression before ‘...’ token
 1414 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                                     ^~~
/usr/local/include/CGAL/iterator.h: In member function ‘CGAL::Dispatch_output_iterator<std::tuple<_Tps ...>, std::tuple<_Args2 ...> >::operator std::tuple<const O& ...>() const’:
/usr/local/include/CGAL/iterator.h:1419:49: error: ‘index_sequence_for’ is not a member of ‘std’
 1419 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                 ^~~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/iterator.h:1419:69: error: expected primary-expression before ‘...’ token
 1419 |     return tuple_internal::to_tuple(*this, std::index_sequence_for<O...>{});
      |                                                                     ^~~
In file included from /usr/local/include/CGAL/Kernel/global_functions.h:25,
                 from /usr/local/include/CGAL/Cartesian/Cartesian_base.h:22,
                 from /usr/local/include/CGAL/Simple_cartesian.h:20,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:20,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Kernel/hash_functions.h: At global scope:
/usr/local/include/CGAL/Kernel/hash_functions.h:25:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   25 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:47:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   47 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:57:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   57 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:66:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   66 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:75:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   75 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:84:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   84 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:93:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
   93 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:102:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  102 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:126:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  126 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:135:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  135 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:145:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  145 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:154:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  154 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:164:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  164 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
/usr/local/include/CGAL/Kernel/hash_functions.h:174:13: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  174 | inline std::enable_if_t<std::is_same<typename K::Rep_tag, Cartesian_tag>::value, std::size_t>
      |             ^~~~~~~~~~~
      |             enable_if
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:108:30: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  108 | template<class T>inline std::enable_if_t<std::is_arithmetic<T>::value||std::is_enum<T>::value, T> approx(T d){return d;}
      |                              ^~~~~~~~~~~
      |                              enable_if
/usr/local/include/CGAL/Lazy.h:109:30: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  109 | template<class T>inline std::enable_if_t<std::is_arithmetic<T>::value||std::is_enum<T>::value, T> exact (T d){return d;}
      |                              ^~~~~~~~~~~
      |                              enable_if
/usr/local/include/CGAL/Lazy.h:110:30: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  110 | template<class T>inline std::enable_if_t<std::is_arithmetic<T>::value||std::is_enum<T>::value, unsigned> depth(T){return 0;}
      |                              ^~~~~~~~~~~
      |                              enable_if
/usr/local/include/CGAL/Lazy.h:113:30: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  113 | template<class T>inline std::enable_if_t<std::is_empty<T>::value, T> exact(T){return {};}
      |                              ^~~~~~~~~~~
      |                              enable_if
/usr/local/include/CGAL/Lazy.h:114:30: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  114 | template<class T>inline std::enable_if_t<std::is_empty<T>::value, T> approx(T){return {};}
      |                              ^~~~~~~~~~~
      |                              enable_if
/usr/local/include/CGAL/Lazy.h:115:30: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  115 | template<class T>inline std::enable_if_t<std::is_empty<T>::value, unsigned> depth(T){return 0;}
      |                              ^~~~~~~~~~~
      |                              enable_if
/usr/local/include/CGAL/Lazy.h:118:31: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  118 | template <class T, class=std::enable_if_t<is_iterator_type<T,std::input_iterator_tag>::value>>
      |                               ^~~~~~~~~~~
      |                               enable_if
/usr/local/include/CGAL/Lazy.h:118:42: error: expected ‘>’ before ‘<’ token
  118 | template <class T, class=std::enable_if_t<is_iterator_type<T,std::input_iterator_tag>::value>>
      |                                          ^
/usr/local/include/CGAL/Lazy.h:119:1: error: ‘exact’ function uses ‘auto’ type specifier without trailing return type
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      | ^~~~
/usr/local/include/CGAL/Lazy.h:119:1: note: deduced return type only available with ‘-std=c++14’ or ‘-std=gnu++14’
/usr/local/include/CGAL/Lazy.h: In function ‘auto CGAL::exact(const T&)’:
/usr/local/include/CGAL/Lazy.h:119:64: error: use of ‘auto’ in lambda parameter declaration only available with ‘-std=c++14’ or ‘-std=gnu++14’
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      |                                                                ^~~~
/usr/local/include/CGAL/Lazy.h: In lambda function:
/usr/local/include/CGAL/Lazy.h:119:98: error: no matching function for call to ‘exact(const int&)’
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      |                                                                                                  ^
/usr/local/include/CGAL/Lazy.h:84:1: note: candidate: ‘template<class AT, class ET, class E2A> const ET& CGAL::exact(const CGAL::Lazy<AT, ET, E2A>&)’
   84 | exact(const Lazy<AT,ET,E2A>& l)
      | ^~~~~
/usr/local/include/CGAL/Lazy.h:84:1: note:   template argument deduction/substitution failed:
/usr/local/include/CGAL/Lazy.h:119:98: note:   mismatched types ‘const CGAL::Lazy<AT, ET, E2A>’ and ‘const int’
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      |                                                                                                  ^
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::exact(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const int’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::exact(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const int’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note: candidate: ‘template<class T, class> auto CGAL::exact(const T&)’
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      |      ^~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note:   template argument deduction/substitution failed:
/usr/local/include/CGAL/Lazy.h: At global scope:
/usr/local/include/CGAL/Lazy.h:120:31: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  120 | template <class T, class=std::enable_if_t<is_iterator_type<T,std::input_iterator_tag>::value>>
      |                               ^~~~~~~~~~~
      |                               enable_if
/usr/local/include/CGAL/Lazy.h:120:42: error: expected ‘>’ before ‘<’ token
  120 | template <class T, class=std::enable_if_t<is_iterator_type<T,std::input_iterator_tag>::value>>
      |                                          ^
/usr/local/include/CGAL/Lazy.h:121:1: error: ‘approx’ function uses ‘auto’ type specifier without trailing return type
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      | ^~~~
/usr/local/include/CGAL/Lazy.h:121:1: note: deduced return type only available with ‘-std=c++14’ or ‘-std=gnu++14’
/usr/local/include/CGAL/Lazy.h: In function ‘auto CGAL::approx(const T&)’:
/usr/local/include/CGAL/Lazy.h:121:65: error: use of ‘auto’ in lambda parameter declaration only available with ‘-std=c++14’ or ‘-std=gnu++14’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |                                                                 ^~~~
/usr/local/include/CGAL/Lazy.h: In lambda function:
/usr/local/include/CGAL/Lazy.h:121:100: error: no matching function for call to ‘approx(const int&)’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |                                                                                                    ^
/usr/local/include/CGAL/Lazy.h:66:1: note: candidate: ‘template<class AT, class ET, class E2A> const AT& CGAL::approx(const CGAL::Lazy<AT, ET, E2A>&)’
   66 | approx(const Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:66:1: note:   template argument deduction/substitution failed:
/usr/local/include/CGAL/Lazy.h:121:100: note:   mismatched types ‘const CGAL::Lazy<AT, ET, E2A>’ and ‘const int’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |                                                                                                    ^
/usr/local/include/CGAL/Lazy.h:75:1: note: candidate: ‘template<class AT, class ET, class E2A> AT& CGAL::approx(CGAL::Lazy<AT, ET, E2A>&)’
   75 | approx(Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:75:1: note:   template argument deduction/substitution failed:
/usr/local/include/CGAL/Lazy.h:121:100: note:   mismatched types ‘CGAL::Lazy<AT, ET, E2A>’ and ‘const int’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |                                                                                                    ^
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::approx(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const int’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::approx(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const int’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note: candidate: ‘template<class T, class> auto CGAL::approx(const T&)’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |      ^~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note:   template argument deduction/substitution failed:
/usr/local/include/CGAL/Lazy.h: At global scope:
/usr/local/include/CGAL/Lazy.h:122:31: error: ‘enable_if_t’ in namespace ‘std’ does not name a template type; did you mean ‘enable_if’?
  122 | template <class T, class=std::enable_if_t<is_iterator_type<T,std::input_iterator_tag>::value>>
      |                               ^~~~~~~~~~~
      |                               enable_if
/usr/local/include/CGAL/Lazy.h:122:42: error: expected ‘>’ before ‘<’ token
  122 | template <class T, class=std::enable_if_t<is_iterator_type<T,std::input_iterator_tag>::value>>
      |                                          ^
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:320:33: error: ‘std::index_sequence’ has not been declared
  320 |   void update_exact_helper(std::index_sequence<I...>) const {
      |                                 ^~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:320:47: error: expected ‘,’ or ‘...’ before ‘<’ token
  320 |   void update_exact_helper(std::index_sequence<I...>) const {
      |                                               ^
/usr/local/include/CGAL/Lazy.h: In member function ‘void CGAL::Lazy_rep_n<AT, ET, AC, EC, E2A, L>::update_exact() const’:
/usr/local/include/CGAL/Lazy.h:327:30: error: ‘make_index_sequence’ is not a member of ‘std’
  327 |     update_exact_helper(std::make_index_sequence<sizeof...(L)>{});
      |                              ^~~~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:327:63: error: expected primary-expression before ‘{’ token
  327 |     update_exact_helper(std::make_index_sequence<sizeof...(L)>{});
      |                                                               ^
/usr/local/include/CGAL/Lazy.h: At global scope:
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:39: error: ‘remove_reference_t’ is not a member of ‘std’; did you mean ‘remove_reference’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                       ^~~~~~~~~~~~~~~~~~
      |                                       remove_reference
/usr/local/include/CGAL/Lazy.h:831:89: error: template argument 1 is invalid
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                                                                         ^~
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:39: error: ‘remove_reference_t’ is not a member of ‘std’; did you mean ‘remove_reference’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                       ^~~~~~~~~~~~~~~~~~
      |                                       remove_reference
/usr/local/include/CGAL/Lazy.h:831:89: error: template argument 1 is invalid
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                                                                         ^~
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:39: error: ‘remove_reference_t’ is not a member of ‘std’; did you mean ‘remove_reference’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                       ^~~~~~~~~~~~~~~~~~
      |                                       remove_reference
/usr/local/include/CGAL/Lazy.h:831:89: error: template argument 1 is invalid
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                                                                         ^~
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:39: error: ‘remove_reference_t’ is not a member of ‘std’; did you mean ‘remove_reference’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                       ^~~~~~~~~~~~~~~~~~
      |                                       remove_reference
/usr/local/include/CGAL/Lazy.h:831:89: error: template argument 1 is invalid
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                                                                         ^~
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:22: error: ‘remove_cv_t’ is not a member of ‘std’; did you mean ‘remove_cv’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                      ^~~~~~~~~~~
      |                      remove_cv
/usr/local/include/CGAL/Lazy.h:831:39: error: ‘remove_reference_t’ is not a member of ‘std’; did you mean ‘remove_reference’?
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                       ^~~~~~~~~~~~~~~~~~
      |                                       remove_reference
/usr/local/include/CGAL/Lazy.h:831:89: error: template argument 1 is invalid
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                                                                                         ^~
/usr/local/include/CGAL/Lazy.h:831:3: error: invalid use of template-name ‘CGAL::Lazy_exact_nt’ without an argument list
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |   ^~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:831:3: note: class template argument deduction is only available with ‘-std=c++17’ or ‘-std=gnu++17’
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:61:7: note: ‘template<class ET_> class CGAL::Lazy_exact_nt’ declared here
   61 | class Lazy_exact_nt;
      |       ^~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:831:16: error: expected initializer before ‘<’ token
  831 |   Lazy_exact_nt<std::remove_cv_t<std::remove_reference_t<decltype(ec(CGAL::exact(l)...))>>>
      |                ^
In file included from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl: In member function ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate()’:
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:253:15: warning: ‘CGAL::{anonymous}::default_random’ is deprecated [-Wdeprecated-declarations]
  253 |         CGAL::default_random = CGAL::Random(meshingSeed.getValue());
      |               ^~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/boost/graph/generators.h:19,
                 from /usr/local/include/CGAL/boost/graph/helpers.h:975,
                 from /usr/local/include/CGAL/boost/graph/Euler_operations.h:21,
                 from /usr/local/include/CGAL/IO/facets_in_complex_3_to_triangle_mesh.h:20,
                 from /usr/local/include/CGAL/internal/Mesh_3/Boundary_of_subdomain_of_complex_3_in_triangulation_3_to_off.h:17,
                 from /usr/local/include/CGAL/Mesh_complex_3_in_triangulation_3.h:28,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:40,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Random.h:245:52: note: declared here
  245 |   namespace { CGAL_DEPRECATED_UNUSED CGAL::Random& default_random = get_default_random(); }
      |                                                    ^~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:257:15: warning: ‘CGAL::{anonymous}::default_random’ is deprecated [-Wdeprecated-declarations]
  257 |         CGAL::default_random = CGAL::Random();
      |               ^~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/boost/graph/generators.h:19,
                 from /usr/local/include/CGAL/boost/graph/helpers.h:975,
                 from /usr/local/include/CGAL/boost/graph/Euler_operations.h:21,
                 from /usr/local/include/CGAL/IO/facets_in_complex_3_to_triangle_mesh.h:20,
                 from /usr/local/include/CGAL/internal/Mesh_3/Boundary_of_subdomain_of_complex_3_in_triangulation_3_to_off.h:17,
                 from /usr/local/include/CGAL/Mesh_complex_3_in_triangulation_3.h:28,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:40,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Random.h:245:52: note: declared here
  245 |   namespace { CGAL_DEPRECATED_UNUSED CGAL::Random& default_random = get_default_random(); }
      |                                                    ^~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:427:32: warning: ‘CGAL::{anonymous}::default_random’ is deprecated [-Wdeprecated-declarations]
  427 |     meshingSeed.setValue(CGAL::default_random.get_seed());
      |                                ^~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/boost/graph/generators.h:19,
                 from /usr/local/include/CGAL/boost/graph/helpers.h:975,
                 from /usr/local/include/CGAL/boost/graph/Euler_operations.h:21,
                 from /usr/local/include/CGAL/IO/facets_in_complex_3_to_triangle_mesh.h:20,
                 from /usr/local/include/CGAL/internal/Mesh_3/Boundary_of_subdomain_of_complex_3_in_triangulation_3_to_off.h:17,
                 from /usr/local/include/CGAL/Mesh_complex_3_in_triangulation_3.h:28,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:40,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Random.h:245:52: note: declared here
  245 |   namespace { CGAL_DEPRECATED_UNUSED CGAL::Random& default_random = get_default_random(); }
      |                                                    ^~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h: In instantiation of ‘void sofa::core::TMultiVecId<vtype, vaccess>::assign(const MyVecId&) [with sofa::core::VecType vtype = sofa::core::V_MATDERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE; sofa::core::TMultiVecId<vtype, vaccess>::MyVecId = sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>]’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:197:64:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:299:19: warning: implicitly-declared ‘sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>& sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  299 |         defaultId = id;
      |         ~~~~~~~~~~^~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/VecId.h:266:5: note: because ‘sofa::core::TVecId<sofa::core::V_MATDERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TVecId<vtype, vaccess>::TVecId(const sofa::core::TVecId<vtype, sofa::core::V_WRITE>&) [with sofa::core::VecType vtype = sofa::core::V_MATDERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  266 |     TVecId(const TVecId<vtype, V_WRITE>& v) : BaseVecId(vtype, v.getIndex()) { }
      |     ^~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h: In instantiation of ‘void sofa::core::TMultiVecId<vtype, vaccess>::assign(const MyVecId&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE; sofa::core::TMultiVecId<vtype, vaccess>::MyVecId = sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>]’:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/ConstraintParams.h:203:65:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/MultiVecId.h:299:19: warning: implicitly-declared ‘sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>& sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>::operator=(const sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>&)’ is deprecated [-Wdeprecated-copy]
  299 |         defaultId = id;
      |         ~~~~~~~~~~^~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/BaseState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:26,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/VecId.h:266:5: note: because ‘sofa::core::TVecId<sofa::core::V_DERIV, sofa::core::V_WRITE>’ has user-provided ‘sofa::core::TVecId<vtype, vaccess>::TVecId(const sofa::core::TVecId<vtype, sofa::core::V_WRITE>&) [with sofa::core::VecType vtype = sofa::core::V_DERIV; sofa::core::VecAccess vaccess = sofa::core::V_WRITE]’
  266 |     TVecId(const TVecId<vtype, V_WRITE>& v) : BaseVecId(vtype, v.getIndex()) { }
      |     ^~~~~~
In file included from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl: In instantiation of ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’:
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:253:15: warning: ‘CGAL::{anonymous}::default_random’ is deprecated [-Wdeprecated-declarations]
  253 |         CGAL::default_random = CGAL::Random(meshingSeed.getValue());
      |         ~~~~~~^~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/boost/graph/generators.h:19,
                 from /usr/local/include/CGAL/boost/graph/helpers.h:975,
                 from /usr/local/include/CGAL/boost/graph/Euler_operations.h:21,
                 from /usr/local/include/CGAL/IO/facets_in_complex_3_to_triangle_mesh.h:20,
                 from /usr/local/include/CGAL/internal/Mesh_3/Boundary_of_subdomain_of_complex_3_in_triangulation_3_to_off.h:17,
                 from /usr/local/include/CGAL/Mesh_complex_3_in_triangulation_3.h:28,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:40,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Random.h:245:52: note: declared here
  245 |   namespace { CGAL_DEPRECATED_UNUSED CGAL::Random& default_random = get_default_random(); }
      |                                                    ^~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:257:15: warning: ‘CGAL::{anonymous}::default_random’ is deprecated [-Wdeprecated-declarations]
  257 |         CGAL::default_random = CGAL::Random();
      |         ~~~~~~^~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/boost/graph/generators.h:19,
                 from /usr/local/include/CGAL/boost/graph/helpers.h:975,
                 from /usr/local/include/CGAL/boost/graph/Euler_operations.h:21,
                 from /usr/local/include/CGAL/IO/facets_in_complex_3_to_triangle_mesh.h:20,
                 from /usr/local/include/CGAL/internal/Mesh_3/Boundary_of_subdomain_of_complex_3_in_triangulation_3_to_off.h:17,
                 from /usr/local/include/CGAL/Mesh_complex_3_in_triangulation_3.h:28,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:40,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Random.h:245:52: note: declared here
  245 |   namespace { CGAL_DEPRECATED_UNUSED CGAL::Random& default_random = get_default_random(); }
      |                                                    ^~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:427:32: warning: ‘CGAL::{anonymous}::default_random’ is deprecated [-Wdeprecated-declarations]
  427 |     meshingSeed.setValue(CGAL::default_random.get_seed());
      |                          ~~~~~~^~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/boost/graph/generators.h:19,
                 from /usr/local/include/CGAL/boost/graph/helpers.h:975,
                 from /usr/local/include/CGAL/boost/graph/Euler_operations.h:21,
                 from /usr/local/include/CGAL/IO/facets_in_complex_3_to_triangle_mesh.h:20,
                 from /usr/local/include/CGAL/internal/Mesh_3/Boundary_of_subdomain_of_complex_3_in_triangulation_3_to_off.h:17,
                 from /usr/local/include/CGAL/Mesh_complex_3_in_triangulation_3.h:28,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:40,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Random.h:245:52: note: declared here
  245 |   namespace { CGAL_DEPRECATED_UNUSED CGAL::Random& default_random = get_default_random(); }
      |                                                    ^~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/user_classes.h:34,
                 from /usr/local/include/CGAL/squared_distance_2_1.h:23,
                 from /usr/local/include/CGAL/boost/graph/properties_Polyhedron_3.h:18,
                 from /usr/local/include/CGAL/boost/graph/graph_traits_Polyhedron_3.h:496,
                 from /usr/local/include/CGAL/Polyhedron_3.h:1539,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:45,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Point_3.h: In instantiation of ‘typename CGAL::cpp11::result_of<typename R_::Compute_x_3(CGAL::Point_3<R_>)>::type CGAL::Point_3<R_>::x() const [with R_ = CGAL::Epeck; typename CGAL::cpp11::result_of<typename R_::Compute_x_3(CGAL::Point_3<R_>)>::type = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >]’:
/usr/local/include/CGAL/Cartesian_converter.h:286:9:   required from ‘typename K2::Point_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Point_3&) const [with K1 = CGAL::Epeck; K2 = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; Converter = CGAL::NT_converter<CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, double>; typename K2::Point_3 = CGAL::Point_3<CGAL::Epick>; typename K1::Point_3 = CGAL::Point_3<CGAL::Epeck>]’
/usr/local/include/CGAL/Robust_weighted_circumcenter_filtered_traits_3.h:227:27:   required from ‘CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::operator()(const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, bool) const [with K_ = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; CWC_Base_ = CGAL::CommonKernelFunctors::Construct_weighted_circumcenter_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 = CGAL::Point_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Compact_mesh_cell_base_3.h:539:25:   required from ‘const Point_3& CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::weighted_circumcenter(const GT_&) const [with GT_ = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; GT = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; MD = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >; TDS = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::Point_3 = CGAL::Point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Regular_triangulation_3.h:1736:48:   required from ‘CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::dual(CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle) const [with Gt = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; Tds_ = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; Lock_data_structure_ = CGAL::Default; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point = CGAL::Point_3<CGAL::Epick>; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle = CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:150:47:   required from ‘int cgal::countWellCentered(C3t3&) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:161:34:   required from ‘void cgal::printStats(C3t3&, Obj*, const char*) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>; Obj = cgal::MeshGenerationFromPolyhedron<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:290:15:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Point_3.h:87:37: error: no match for call to ‘(CGAL::Lazy_kernel_generic_base<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> >, CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::Epeck>::Compute_x_3 {aka CGAL::Lazy_construction_nt<CGAL::Epeck, CGAL::CartesianKernelFunctors::Compute_x_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::CartesianKernelFunctors::Compute_x_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > > >}) (const CGAL::Point_3<CGAL::Epeck>&)’
   87 |     return typename R::Compute_x_3()(*this);
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/CGAL/Point_3.h: In instantiation of ‘typename CGAL::cpp11::result_of<typename R_::Compute_y_3(CGAL::Point_3<R_>)>::type CGAL::Point_3<R_>::y() const [with R_ = CGAL::Epeck; typename CGAL::cpp11::result_of<typename R_::Compute_y_3(CGAL::Point_3<R_>)>::type = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >]’:
/usr/local/include/CGAL/Cartesian_converter.h:286:9:   required from ‘typename K2::Point_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Point_3&) const [with K1 = CGAL::Epeck; K2 = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; Converter = CGAL::NT_converter<CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, double>; typename K2::Point_3 = CGAL::Point_3<CGAL::Epick>; typename K1::Point_3 = CGAL::Point_3<CGAL::Epeck>]’
/usr/local/include/CGAL/Robust_weighted_circumcenter_filtered_traits_3.h:227:27:   required from ‘CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::operator()(const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, bool) const [with K_ = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; CWC_Base_ = CGAL::CommonKernelFunctors::Construct_weighted_circumcenter_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 = CGAL::Point_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Compact_mesh_cell_base_3.h:539:25:   required from ‘const Point_3& CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::weighted_circumcenter(const GT_&) const [with GT_ = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; GT = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; MD = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >; TDS = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::Point_3 = CGAL::Point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Regular_triangulation_3.h:1736:48:   required from ‘CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::dual(CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle) const [with Gt = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; Tds_ = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; Lock_data_structure_ = CGAL::Default; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point = CGAL::Point_3<CGAL::Epick>; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle = CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:150:47:   required from ‘int cgal::countWellCentered(C3t3&) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:161:34:   required from ‘void cgal::printStats(C3t3&, Obj*, const char*) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>; Obj = cgal::MeshGenerationFromPolyhedron<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:290:15:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Point_3.h:93:37: error: no match for call to ‘(CGAL::Lazy_kernel_generic_base<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> >, CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::Epeck>::Compute_y_3 {aka CGAL::Lazy_construction_nt<CGAL::Epeck, CGAL::CartesianKernelFunctors::Compute_y_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::CartesianKernelFunctors::Compute_y_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > > >}) (const CGAL::Point_3<CGAL::Epeck>&)’
   93 |     return typename R::Compute_y_3()(*this);
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
/usr/local/include/CGAL/Point_3.h: In instantiation of ‘typename CGAL::cpp11::result_of<typename R_::Compute_z_3(CGAL::Point_3<R_>)>::type CGAL::Point_3<R_>::z() const [with R_ = CGAL::Epeck; typename CGAL::cpp11::result_of<typename R_::Compute_z_3(CGAL::Point_3<R_>)>::type = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >]’:
/usr/local/include/CGAL/Cartesian_converter.h:286:9:   required from ‘typename K2::Point_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Point_3&) const [with K1 = CGAL::Epeck; K2 = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; Converter = CGAL::NT_converter<CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, double>; typename K2::Point_3 = CGAL::Point_3<CGAL::Epick>; typename K1::Point_3 = CGAL::Point_3<CGAL::Epeck>]’
/usr/local/include/CGAL/Robust_weighted_circumcenter_filtered_traits_3.h:227:27:   required from ‘CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::operator()(const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, bool) const [with K_ = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; CWC_Base_ = CGAL::CommonKernelFunctors::Construct_weighted_circumcenter_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 = CGAL::Point_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Compact_mesh_cell_base_3.h:539:25:   required from ‘const Point_3& CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::weighted_circumcenter(const GT_&) const [with GT_ = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; GT = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; MD = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >; TDS = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::Point_3 = CGAL::Point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Regular_triangulation_3.h:1736:48:   required from ‘CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::dual(CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle) const [with Gt = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; Tds_ = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; Lock_data_structure_ = CGAL::Default; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point = CGAL::Point_3<CGAL::Epick>; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle = CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:150:47:   required from ‘int cgal::countWellCentered(C3t3&) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:161:34:   required from ‘void cgal::printStats(C3t3&, Obj*, const char*) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>; Obj = cgal::MeshGenerationFromPolyhedron<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:290:15:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Point_3.h:99:37: error: no match for call to ‘(CGAL::Lazy_kernel_generic_base<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> >, CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::Epeck>::Compute_z_3 {aka CGAL::Lazy_construction_nt<CGAL::Epeck, CGAL::CartesianKernelFunctors::Compute_z_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::CartesianKernelFunctors::Compute_z_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > > >}) (const CGAL::Point_3<CGAL::Epeck>&)’
   99 |     return typename R::Compute_z_3()(*this);
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h: In instantiation of ‘CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::operator()(const L0&, const L1&, const L2&) const [with L0 = CGAL::Return_base_tag; L1 = CGAL::Point_3<CGAL::Epeck>; L2 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; LK = CGAL::Epeck; AC = CGAL::CartesianKernelFunctors::Construct_weighted_point_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CartesianKernelFunctors::Construct_weighted_point_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A_ = CGAL::Default; CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type = CGAL::Weighted_point_3<CGAL::Epeck>]’:
/usr/local/include/CGAL/Weighted_point_3.h:80:51:   required from ‘CGAL::Weighted_point_3<R_>::Weighted_point_3(const Point_3&, const Weight&) [with R_ = CGAL::Epeck; CGAL::Weighted_point_3<R_>::Point_3 = CGAL::Point_3<CGAL::Epeck>; CGAL::Weighted_point_3<R_>::Weight = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >]’
/usr/local/include/CGAL/Cartesian_converter.h:293:9:   required from ‘typename K2::Weighted_point_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Weighted_point_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epeck>; typename K1::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Robust_weighted_circumcenter_filtered_traits_3.h:227:64:   required from ‘CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::operator()(const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, bool) const [with K_ = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; CWC_Base_ = CGAL::CommonKernelFunctors::Construct_weighted_circumcenter_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 = CGAL::Point_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Compact_mesh_cell_base_3.h:539:25:   required from ‘const Point_3& CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::weighted_circumcenter(const GT_&) const [with GT_ = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; GT = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; MD = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >; TDS = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::Point_3 = CGAL::Point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Regular_triangulation_3.h:1736:48:   required from ‘CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::dual(CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle) const [with Gt = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; Tds_ = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; Lock_data_structure_ = CGAL::Default; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point = CGAL::Point_3<CGAL::Epick>; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle = CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:150:47:   required from ‘int cgal::countWellCentered(C3t3&) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:161:34:   required from ‘void cgal::printStats(C3t3&, Obj*, const char*) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>; Obj = cgal::MeshGenerationFromPolyhedron<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:290:15:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Lazy.h:1634:3: error: no matching function for call to ‘exact(const CGAL::Return_base_tag&)’
 1634 |   BOOST_PP_REPEAT_FROM_TO(1, 9, CGAL_CONSTRUCTION_OPERATOR, _)
      |   ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:84:1: note: candidate: ‘template<class AT, class ET, class E2A> const ET& CGAL::exact(const CGAL::Lazy<AT, ET, E2A>&)’
   84 | exact(const Lazy<AT,ET,E2A>& l)
      | ^~~~~
/usr/local/include/CGAL/Lazy.h:84:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:1634:3: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
 1634 |   BOOST_PP_REPEAT_FROM_TO(1, 9, CGAL_CONSTRUCTION_OPERATOR, _)
      |   ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::exact(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::exact(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note: candidate: ‘template<class T, class> auto CGAL::exact(const T&)’
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      |      ^~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h: In instantiation of ‘typename CGAL::cpp11::result_of<CGAL::Lazy_construction<LK, AC, EC, E2A_, false>(L0, L1, L2, L3)>::type CGAL::Lazy_construction<LK, AC, EC, E2A_, false>::operator()(const L0&, const L1&, const L2&, const L3&) const [with L0 = CGAL::Return_base_tag; L1 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; L2 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; L3 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; LK = CGAL::Epeck; AC = CGAL::CartesianKernelFunctors::Construct_point_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CartesianKernelFunctors::Construct_point_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A_ = CGAL::Default; typename CGAL::cpp11::result_of<CGAL::Lazy_construction<LK, AC, EC, E2A_, false>(L0, L1, L2, L3)>::type = CGAL::Point_3<CGAL::Epeck>]’:
/usr/local/include/CGAL/Point_3.h:77:42:   required from ‘CGAL::Point_3<R_>::Point_3(const T1&, const T2&, const T3&) [with T1 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; T2 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; T3 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; R_ = CGAL::Epeck]’
/usr/local/include/CGAL/Cartesian_converter.h:286:9:   required from ‘typename K2::Point_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Point_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Point_3 = CGAL::Point_3<CGAL::Epeck>; typename K1::Point_3 = CGAL::Point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Cartesian_converter.h:293:33:   required from ‘typename K2::Weighted_point_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Weighted_point_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epeck>; typename K1::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Robust_weighted_circumcenter_filtered_traits_3.h:227:64:   required from ‘CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::operator()(const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, bool) const [with K_ = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; CWC_Base_ = CGAL::CommonKernelFunctors::Construct_weighted_circumcenter_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 = CGAL::Point_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Compact_mesh_cell_base_3.h:539:25:   required from ‘const Point_3& CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::weighted_circumcenter(const GT_&) const [with GT_ = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; GT = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; MD = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >; TDS = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::Point_3 = CGAL::Point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Regular_triangulation_3.h:1736:48:   required from ‘CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::dual(CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle) const [with Gt = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; Tds_ = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; Lock_data_structure_ = CGAL::Default; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point = CGAL::Point_3<CGAL::Epick>; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle = CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:150:47:   required from ‘int cgal::countWellCentered(C3t3&) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:161:34:   required from ‘void cgal::printStats(C3t3&, Obj*, const char*) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>; Obj = cgal::MeshGenerationFromPolyhedron<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:290:15:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Lazy.h:1701:3: error: no matching function for call to ‘exact(const CGAL::Return_base_tag&)’
 1701 |   BOOST_PP_REPEAT_FROM_TO(1, 9, CGAL_CONSTRUCTION_OPERATOR, _)
      |   ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:84:1: note: candidate: ‘template<class AT, class ET, class E2A> const ET& CGAL::exact(const CGAL::Lazy<AT, ET, E2A>&)’
   84 | exact(const Lazy<AT,ET,E2A>& l)
      | ^~~~~
/usr/local/include/CGAL/Lazy.h:84:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:1701:3: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
 1701 |   BOOST_PP_REPEAT_FROM_TO(1, 9, CGAL_CONSTRUCTION_OPERATOR, _)
      |   ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::exact(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::exact(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note: candidate: ‘template<class T, class> auto CGAL::exact(const T&)’
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      |      ^~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h: In instantiation of ‘CGAL::Lazy_rep_n<AT, ET, AC, EC, E2A, L>::Lazy_rep_n(const AC&, const EC&, LL&& ...) [with LL = {const CGAL::Return_base_tag&, const CGAL::Point_3<CGAL::Epeck>&, const CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >&}; AT = CGAL::Weighted_point_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; ET = CGAL::Weighted_point_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; AC = CGAL::CartesianKernelFunctors::Construct_weighted_point_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CartesianKernelFunctors::Construct_weighted_point_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A = CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; L = {CGAL::Return_base_tag, CGAL::Point_3<CGAL::Epeck>, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >}]’:
/usr/local/include/CGAL/Lazy.h:1634:3:   required from ‘CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::operator()(const L0&, const L1&, const L2&) const [with L0 = CGAL::Return_base_tag; L1 = CGAL::Point_3<CGAL::Epeck>; L2 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; LK = CGAL::Epeck; AC = CGAL::CartesianKernelFunctors::Construct_weighted_point_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CartesianKernelFunctors::Construct_weighted_point_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A_ = CGAL::Default; CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type = CGAL::Weighted_point_3<CGAL::Epeck>]’
/usr/local/include/CGAL/Weighted_point_3.h:80:51:   required from ‘CGAL::Weighted_point_3<R_>::Weighted_point_3(const Point_3&, const Weight&) [with R_ = CGAL::Epeck; CGAL::Weighted_point_3<R_>::Point_3 = CGAL::Point_3<CGAL::Epeck>; CGAL::Weighted_point_3<R_>::Weight = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >]’
/usr/local/include/CGAL/Cartesian_converter.h:293:9:   required from ‘typename K2::Weighted_point_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Weighted_point_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epeck>; typename K1::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Robust_weighted_circumcenter_filtered_traits_3.h:227:64:   required from ‘CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::operator()(const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, bool) const [with K_ = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; CWC_Base_ = CGAL::CommonKernelFunctors::Construct_weighted_circumcenter_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 = CGAL::Point_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Compact_mesh_cell_base_3.h:539:25:   required from ‘const Point_3& CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::weighted_circumcenter(const GT_&) const [with GT_ = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; GT = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; MD = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >; TDS = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::Point_3 = CGAL::Point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Regular_triangulation_3.h:1736:48:   required from ‘CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::dual(CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle) const [with Gt = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; Tds_ = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; Lock_data_structure_ = CGAL::Default; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point = CGAL::Point_3<CGAL::Epick>; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle = CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:150:47:   required from ‘int cgal::countWellCentered(C3t3&) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:161:34:   required from ‘void cgal::printStats(C3t3&, Obj*, const char*) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>; Obj = cgal::MeshGenerationFromPolyhedron<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:290:15:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Lazy.h:331:42: error: no matching function for call to ‘approx(const CGAL::Return_base_tag&)’
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:66:1: note: candidate: ‘template<class AT, class ET, class E2A> const AT& CGAL::approx(const CGAL::Lazy<AT, ET, E2A>&)’
   66 | approx(const Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:66:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:331:42: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:75:1: note: candidate: ‘template<class AT, class ET, class E2A> AT& CGAL::approx(CGAL::Lazy<AT, ET, E2A>&)’
   75 | approx(Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:75:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:331:42: note:   types ‘CGAL::Lazy<AT, ET, E2A>’ and ‘const CGAL::Return_base_tag’ have incompatible cv-qualifiers
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::approx(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::approx(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note: candidate: ‘template<class T, class> auto CGAL::approx(const T&)’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |      ^~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:54: error: no matching function for call to ‘depth(const CGAL::Return_base_tag&)’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                                           ~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:93:1: note: candidate: ‘template<class AT, class ET, class E2A> unsigned int CGAL::depth(const CGAL::Lazy<AT, ET, E2A>&)’
   93 | depth(const Lazy<AT,ET,E2A>& l)
      | ^~~~~
/usr/local/include/CGAL/Lazy.h:93:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:54: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                                           ~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘unsigned int CGAL::depth(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘unsigned int CGAL::depth(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:123:10: note: candidate: ‘template<class T, class> unsigned int CGAL::depth(const T&)’
  123 | unsigned depth(T const&) {return 1;} // FIXME: depth(*t) would be better when t is valid, but not for end iterators, and the true answer would iterate on the range, but we can't do that with only one iterator... We need to replace iterators with ranges to solve that.
      |          ^~~~~
/usr/local/include/CGAL/Lazy.h:123:10: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: error: no matching function for call to ‘max(<brace-enclosed initializer list>)’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/bits/char_traits.h:39,
                 from /usr/include/c++/9/string:40,
                 from /usr/include/c++/9/stdexcept:39,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:55,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algobase.h:222:5: note: candidate: ‘template<class _Tp> const _Tp& std::max(const _Tp&, const _Tp&)’
  222 |     max(const _Tp& __a, const _Tp& __b)
      |     ^~~
/usr/include/c++/9/bits/stl_algobase.h:222:5: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: note:   candidate expects 2 arguments, 1 provided
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/bits/char_traits.h:39,
                 from /usr/include/c++/9/string:40,
                 from /usr/include/c++/9/stdexcept:39,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:55,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algobase.h:268:5: note: candidate: ‘template<class _Tp, class _Compare> const _Tp& std::max(const _Tp&, const _Tp&, _Compare)’
  268 |     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
      |     ^~~
/usr/include/c++/9/bits/stl_algobase.h:268:5: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: note:   candidate expects 3 arguments, 1 provided
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/algorithm:62,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:57,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algo.h:3456:5: note: candidate: ‘template<class _Tp> _Tp std::max(std::initializer_list<_Tp>)’
 3456 |     max(initializer_list<_Tp> __l)
      |     ^~~
/usr/include/c++/9/bits/stl_algo.h:3456:5: note:   template argument deduction/substitution failed:
/usr/include/c++/9/bits/stl_algo.h:3462:5: note: candidate: ‘template<class _Tp, class _Compare> _Tp std::max(std::initializer_list<_Tp>, _Compare)’
 3462 |     max(initializer_list<_Tp> __l, _Compare __comp)
      |     ^~~
/usr/include/c++/9/bits/stl_algo.h:3462:5: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h: In instantiation of ‘CGAL::Lazy_rep_n<AT, ET, AC, EC, E2A, L>::Lazy_rep_n(const AC&, const EC&, LL&& ...) [with LL = {const CGAL::Return_base_tag&, const CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >&, const CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >&, const CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >&}; AT = CGAL::Point_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; ET = CGAL::Point_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; AC = CGAL::CartesianKernelFunctors::Construct_point_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CartesianKernelFunctors::Construct_point_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A = CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; L = {CGAL::Return_base_tag, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >}]’:
/usr/local/include/CGAL/Lazy.h:1701:3:   required from ‘typename CGAL::cpp11::result_of<CGAL::Lazy_construction<LK, AC, EC, E2A_, false>(L0, L1, L2, L3)>::type CGAL::Lazy_construction<LK, AC, EC, E2A_, false>::operator()(const L0&, const L1&, const L2&, const L3&) const [with L0 = CGAL::Return_base_tag; L1 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; L2 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; L3 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; LK = CGAL::Epeck; AC = CGAL::CartesianKernelFunctors::Construct_point_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CartesianKernelFunctors::Construct_point_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A_ = CGAL::Default; typename CGAL::cpp11::result_of<CGAL::Lazy_construction<LK, AC, EC, E2A_, false>(L0, L1, L2, L3)>::type = CGAL::Point_3<CGAL::Epeck>]’
/usr/local/include/CGAL/Point_3.h:77:42:   required from ‘CGAL::Point_3<R_>::Point_3(const T1&, const T2&, const T3&) [with T1 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; T2 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; T3 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; R_ = CGAL::Epeck]’
/usr/local/include/CGAL/Cartesian_converter.h:286:9:   required from ‘typename K2::Point_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Point_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Point_3 = CGAL::Point_3<CGAL::Epeck>; typename K1::Point_3 = CGAL::Point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Cartesian_converter.h:293:33:   required from ‘typename K2::Weighted_point_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Weighted_point_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epeck>; typename K1::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Robust_weighted_circumcenter_filtered_traits_3.h:227:64:   required from ‘CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::operator()(const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, const Weighted_point_3&, bool) const [with K_ = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; CWC_Base_ = CGAL::CommonKernelFunctors::Construct_weighted_circumcenter_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Point_3 = CGAL::Point_3<CGAL::Epick>; CGAL::Robust_filtered_construct_weighted_circumcenter_3<K_, CWC_Base_>::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Compact_mesh_cell_base_3.h:539:25:   required from ‘const Point_3& CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::weighted_circumcenter(const GT_&) const [with GT_ = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; GT = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; MD = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >; TDS = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; CGAL::Compact_mesh_cell_base_3<GT, MD, TDS>::Point_3 = CGAL::Point_3<CGAL::Epick>]’
/usr/local/include/CGAL/Regular_triangulation_3.h:1736:48:   required from ‘CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::dual(CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle) const [with Gt = CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >; Tds_ = CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag>; Lock_data_structure_ = CGAL::Default; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Bare_point = CGAL::Point_3<CGAL::Epick>; CGAL::Regular_triangulation_3<Gt, Tds_, Lock_data_structure_>::Cell_handle = CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:150:47:   required from ‘int cgal::countWellCentered(C3t3&) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:161:34:   required from ‘void cgal::printStats(C3t3&, Obj*, const char*) [with C3t3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>; Obj = cgal::MeshGenerationFromPolyhedron<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:290:15:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Lazy.h:331:42: error: no matching function for call to ‘approx(const CGAL::Return_base_tag&)’
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:66:1: note: candidate: ‘template<class AT, class ET, class E2A> const AT& CGAL::approx(const CGAL::Lazy<AT, ET, E2A>&)’
   66 | approx(const Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:66:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:331:42: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:75:1: note: candidate: ‘template<class AT, class ET, class E2A> AT& CGAL::approx(CGAL::Lazy<AT, ET, E2A>&)’
   75 | approx(Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:75:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:331:42: note:   types ‘CGAL::Lazy<AT, ET, E2A>’ and ‘const CGAL::Return_base_tag’ have incompatible cv-qualifiers
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::approx(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::approx(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note: candidate: ‘template<class T, class> auto CGAL::approx(const T&)’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |      ^~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:54: error: no matching function for call to ‘depth(const CGAL::Return_base_tag&)’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                                           ~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:93:1: note: candidate: ‘template<class AT, class ET, class E2A> unsigned int CGAL::depth(const CGAL::Lazy<AT, ET, E2A>&)’
   93 | depth(const Lazy<AT,ET,E2A>& l)
      | ^~~~~
/usr/local/include/CGAL/Lazy.h:93:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:54: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                                           ~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘unsigned int CGAL::depth(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘unsigned int CGAL::depth(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:123:10: note: candidate: ‘template<class T, class> unsigned int CGAL::depth(const T&)’
  123 | unsigned depth(T const&) {return 1;} // FIXME: depth(*t) would be better when t is valid, but not for end iterators, and the true answer would iterate on the range, but we can't do that with only one iterator... We need to replace iterators with ranges to solve that.
      |          ^~~~~
/usr/local/include/CGAL/Lazy.h:123:10: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: error: no matching function for call to ‘max(<brace-enclosed initializer list>)’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/bits/char_traits.h:39,
                 from /usr/include/c++/9/string:40,
                 from /usr/include/c++/9/stdexcept:39,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:55,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algobase.h:222:5: note: candidate: ‘template<class _Tp> const _Tp& std::max(const _Tp&, const _Tp&)’
  222 |     max(const _Tp& __a, const _Tp& __b)
      |     ^~~
/usr/include/c++/9/bits/stl_algobase.h:222:5: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: note:   candidate expects 2 arguments, 1 provided
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/bits/char_traits.h:39,
                 from /usr/include/c++/9/string:40,
                 from /usr/include/c++/9/stdexcept:39,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:55,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algobase.h:268:5: note: candidate: ‘template<class _Tp, class _Compare> const _Tp& std::max(const _Tp&, const _Tp&, _Compare)’
  268 |     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
      |     ^~~
/usr/include/c++/9/bits/stl_algobase.h:268:5: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: note:   candidate expects 3 arguments, 1 provided
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/algorithm:62,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:57,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algo.h:3456:5: note: candidate: ‘template<class _Tp> _Tp std::max(std::initializer_list<_Tp>)’
 3456 |     max(initializer_list<_Tp> __l)
      |     ^~~
/usr/include/c++/9/bits/stl_algo.h:3456:5: note:   template argument deduction/substitution failed:
/usr/include/c++/9/bits/stl_algo.h:3462:5: note: candidate: ‘template<class _Tp, class _Compare> _Tp std::max(std::initializer_list<_Tp>, _Compare)’
 3462 |     max(initializer_list<_Tp> __l, _Compare __comp)
      |     ^~~
/usr/include/c++/9/bits/stl_algo.h:3462:5: note:   template argument deduction/substitution failed:
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:316,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Visitor.h: In instantiation of ‘void Eigen::DenseBase<Derived>::visit(Visitor&) const [with Visitor = Eigen::internal::min_coeff_visitor<Eigen::Block<Eigen::Matrix<double, 3, 1>, -1, 1, false> >; Derived = Eigen::Block<Eigen::Matrix<double, 3, 1>, -1, 1, false>]’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Visitor.h:199:3:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::minCoeff(IndexType*) const [with IndexType = long int; Derived = Eigen::Block<Eigen::Matrix<double, 3, 1>, -1, 1, false>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:470:7:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const MatrixType&, int) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::SelfAdjointEigenSolver<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:93:7:   required from ‘static bool CGAL::Eigen_diagonalize_traits<FT, dim>::diagonalize_selfadjoint_matrix(CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector&) [with FT = double; unsigned int dim = 3; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix = Eigen::Matrix<double, 3, 3>; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:140:46:   required from ‘static bool CGAL::Eigen_diagonalize_traits<FT, dim>::diagonalize_selfadjoint_covariance_matrix(const Covariance_matrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::Vector&, CGAL::Eigen_diagonalize_traits<FT, dim>::Matrix&) [with FT = double; unsigned int dim = 3; CGAL::Eigen_diagonalize_traits<FT, dim>::Covariance_matrix = std::array<double, 6>; CGAL::Eigen_diagonalize_traits<FT, dim>::Vector = std::array<double, 3>; CGAL::Eigen_diagonalize_traits<FT, dim>::Matrix = std::array<double, 9>]’
/usr/local/include/CGAL/Default_diagonalize_traits.h:65:59:   required from ‘static bool CGAL::Default_diagonalize_traits<FT, dim>::diagonalize_selfadjoint_covariance_matrix(const Covariance_matrix&, CGAL::Default_diagonalize_traits<FT, dim>::Vector&, CGAL::Default_diagonalize_traits<FT, dim>::Matrix&) [with FT = double; unsigned int dim = 3; CGAL::Default_diagonalize_traits<FT, dim>::Covariance_matrix = std::array<double, 6>; CGAL::Default_diagonalize_traits<FT, dim>::Vector = std::array<double, 3>; CGAL::Default_diagonalize_traits<FT, dim>::Matrix = std::array<double, 9>]’
/usr/local/include/CGAL/PCA_util.h:708:5:   [ skipping 22 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Visitor.h:80:28: warning: implicitly-declared ‘Eigen::Block<Eigen::Matrix<double, 3, 1>, -1, 1, false>::Block(const Eigen::Block<Eigen::Matrix<double, 3, 1>, -1, 1, false>&)’ is deprecated [-Wdeprecated-copy]
   80 |   typename Derived::Nested thisNested(derived());
      |                            ^~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:20,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/util/Macros.h:606:32: note: because ‘Eigen::Block<Eigen::Matrix<double, 3, 1>, -1, 1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = Eigen::Matrix<double, 3, 1>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false]’
  606 |   EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                ^~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/util/Macros.h:617:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  617 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Block.h:155:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  155 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:284,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> >, Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Derived = Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/DenseBase.h:375:7:   required from ‘void Eigen::DenseBase<Derived>::swap(const Eigen::DenseBase<OtherDerived>&, int) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:475:11:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::compute(const MatrixType&, int) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::SelfAdjointEigenSolver<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:93:7:   required from ‘static bool CGAL::Eigen_diagonalize_traits<FT, dim>::diagonalize_selfadjoint_matrix(CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector&) [with FT = double; unsigned int dim = 3; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix = Eigen::Matrix<double, 3, 3>; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:140:46:   required from ‘static bool CGAL::Eigen_diagonalize_traits<FT, dim>::diagonalize_selfadjoint_covariance_matrix(const Covariance_matrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::Vector&, CGAL::Eigen_diagonalize_traits<FT, dim>::Matrix&) [with FT = double; unsigned int dim = 3; CGAL::Eigen_diagonalize_traits<FT, dim>::Covariance_matrix = std::array<double, 6>; CGAL::Eigen_diagonalize_traits<FT, dim>::Vector = std::array<double, 3>; CGAL::Eigen_diagonalize_traits<FT, dim>::Matrix = std::array<double, 9>]’
/usr/local/include/CGAL/Default_diagonalize_traits.h:65:59:   [ skipping 23 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3> >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:135:17:   [ skipping 24 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:351,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/ArrayWrapper.h: In instantiation of ‘Eigen::ArrayWrapper<ExpressionType>::ArrayWrapper(ExpressionType&) [with ExpressionType = Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>]’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/MatrixBase.h:316:52:   required from ‘Eigen::ArrayWrapper<Derived> Eigen::MatrixBase<Derived>::array() [with Derived = Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:583:34:   required from ‘static void Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::run(SolverType&, const MatrixType&, int) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:734:106:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::computeDirect(const MatrixType&, int) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::SelfAdjointEigenSolver<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:90:7:   required from ‘static bool CGAL::Eigen_diagonalize_traits<FT, dim>::diagonalize_selfadjoint_matrix(CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector&) [with FT = double; unsigned int dim = 3; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix = Eigen::Matrix<double, 3, 3>; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:140:46:   required from ‘static bool CGAL::Eigen_diagonalize_traits<FT, dim>::diagonalize_selfadjoint_covariance_matrix(const Covariance_matrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::Vector&, CGAL::Eigen_diagonalize_traits<FT, dim>::Matrix&) [with FT = double; unsigned int dim = 3; CGAL::Eigen_diagonalize_traits<FT, dim>::Covariance_matrix = std::array<double, 6>; CGAL::Eigen_diagonalize_traits<FT, dim>::Vector = std::array<double, 3>; CGAL::Eigen_diagonalize_traits<FT, dim>::Matrix = std::array<double, 9>]’
/usr/local/include/CGAL/Default_diagonalize_traits.h:65:59:   [ skipping 23 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/ArrayWrapper.h:56:70: warning: implicitly-declared ‘Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>::Diagonal(const Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>&)’ is deprecated [-Wdeprecated-copy]
   56 |     inline ArrayWrapper(ExpressionType& matrix) : m_expression(matrix) {}
      |                                                                      ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:284,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:562:30: note: because ‘Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>’ has user-provided ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>]’
  562 | EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const MatrixBase& other)
      |                              ^~~~~~~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:297,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseUnaryOp.h: In instantiation of ‘Eigen::CwiseUnaryOp<UnaryOp, MatrixType>::CwiseUnaryOp(const XprType&, const UnaryOp&) [with UnaryOp = Eigen::internal::scalar_abs_op<double>; XprType = const Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>]’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/../plugins/MatrixCwiseUnaryOps.h:21:35:   required from ‘const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<typename Eigen::internal::traits<T>::Scalar>, const Derived> Eigen::MatrixBase<Derived>::cwiseAbs() const [with Derived = Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:554:31:   required from ‘static bool Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::extract_kernel(Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType&, Eigen::Ref<typename SolverType::RealVectorType>, Eigen::Ref<typename SolverType::RealVectorType>) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::conditional<typename SolverType::RealVectorType::IsVectorAtCompileTime, Eigen::InnerStride<1>, Eigen::OuterStride<> >::type = Eigen::InnerStride<1>; typename SolverType::RealVectorType = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:617:25:   required from ‘static void Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::run(SolverType&, const MatrixType&, int) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:734:106:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::computeDirect(const MatrixType&, int) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::SelfAdjointEigenSolver<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:90:7:   required from ‘static bool CGAL::Eigen_diagonalize_traits<FT, dim>::diagonalize_selfadjoint_matrix(CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector&) [with FT = double; unsigned int dim = 3; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix = Eigen::Matrix<double, 3, 3>; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:140:46:   [ skipping 24 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:35: warning: implicitly-declared ‘Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>::Diagonal(const Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>&)’ is deprecated [-Wdeprecated-copy]
   68 |       : m_xpr(xpr), m_functor(func) {}
      |                                   ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:284,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:562:30: note: because ‘Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>’ has user-provided ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>]’
  562 | EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const MatrixBase& other)
      |                              ^~~~~~~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:297,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseUnaryOp.h: In instantiation of ‘void Eigen::DenseBase<Derived>::visit(Visitor&) const [with Visitor = Eigen::internal::max_coeff_visitor<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> > >; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >]’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Visitor.h:233:3:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::maxCoeff(IndexType*) const [with IndexType = long int; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:554:5:   required from ‘static bool Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::extract_kernel(Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType&, Eigen::Ref<typename SolverType::RealVectorType>, Eigen::Ref<typename SolverType::RealVectorType>) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::conditional<typename SolverType::RealVectorType::IsVectorAtCompileTime, Eigen::InnerStride<1>, Eigen::OuterStride<> >::type = Eigen::InnerStride<1>; typename SolverType::RealVectorType = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:617:25:   required from ‘static void Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::run(SolverType&, const MatrixType&, int) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:734:106:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::computeDirect(const MatrixType&, int) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::SelfAdjointEigenSolver<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:90:7:   required from ‘static bool CGAL::Eigen_diagonalize_traits<FT, dim>::diagonalize_selfadjoint_matrix(CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector&) [with FT = double; unsigned int dim = 3; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix = Eigen::Matrix<double, 3, 3>; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:140:46:   [ skipping 24 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseUnaryOp.h:59:7: warning: implicitly-declared ‘constexpr Eigen::internal::no_assignment_operator::no_assignment_operator(const Eigen::internal::no_assignment_operator&)’ is deprecated [-Wdeprecated-copy]
   59 | class CwiseUnaryOp : internal::no_assignment_operator,
      |       ^~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:255,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/util/XprHelper.h:35:29: note: because ‘Eigen::internal::no_assignment_operator’ has user-provided ‘Eigen::internal::no_assignment_operator& Eigen::internal::no_assignment_operator::operator=(const Eigen::internal::no_assignment_operator&)’
   35 |     no_assignment_operator& operator=(const no_assignment_operator&);
      |                             ^~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:297,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseUnaryOp.h:59:7: warning: implicitly-declared ‘Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>::Diagonal(const Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>&)’ is deprecated [-Wdeprecated-copy]
   59 | class CwiseUnaryOp : internal::no_assignment_operator,
      |       ^~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:284,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:562:30: note: because ‘Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>’ has user-provided ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>]’
  562 | EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const MatrixBase& other)
      |                              ^~~~~~~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:316,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Visitor.h:80:28: note: synthesized method ‘Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >::CwiseUnaryOp(const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, const Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >&)’ first required here
   80 |   typename Derived::Nested thisNested(derived());
      |                            ^~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:297,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseUnaryOp.h: In instantiation of ‘Eigen::CwiseUnaryOp<UnaryOp, MatrixType>::CwiseUnaryOp(const XprType&, const UnaryOp&) [with UnaryOp = Eigen::internal::scalar_multiple_op<double>; XprType = const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>]’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:51:10:   required from ‘const ScalarMultipleReturnType Eigen::MatrixBase<Derived>::operator*(const Scalar&) const [with Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Eigen::MatrixBase<Derived>::ScalarMultipleReturnType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> >; typename Eigen::internal::traits<T>::Scalar = double; Eigen::MatrixBase<Derived>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:77:16:   required from ‘const ScalarMultipleReturnType Eigen::operator*(const Scalar&, const StorageBaseType&)’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:625:60:   required from ‘static void Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::run(SolverType&, const MatrixType&, int) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:734:106:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::computeDirect(const MatrixType&, int) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::SelfAdjointEigenSolver<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:90:7:   required from ‘static bool CGAL::Eigen_diagonalize_traits<FT, dim>::diagonalize_selfadjoint_matrix(CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector&) [with FT = double; unsigned int dim = 3; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix = Eigen::Matrix<double, 3, 3>; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:140:46:   [ skipping 24 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:35: warning: implicitly-declared ‘Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>::Block(const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>&)’ is deprecated [-Wdeprecated-copy]
   68 |       : m_xpr(xpr), m_functor(func) {}
      |                                   ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:20,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/util/Macros.h:606:32: note: because ‘Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = Eigen::Matrix<double, 3, 3>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]’
  606 |   EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                ^~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/util/Macros.h:617:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  617 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Block.h:155:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  155 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:284,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, Eigen::Matrix<double, 3, 1> >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; OtherDerived = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:638:23:   required from ‘static void Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::run(SolverType&, const MatrixType&, int) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:734:106:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::computeDirect(const MatrixType&, int) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::SelfAdjointEigenSolver<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:90:7:   [ skipping 25 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:297,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseUnaryOp.h: In instantiation of ‘Eigen::CwiseUnaryOp<UnaryOp, MatrixType>::CwiseUnaryOp(const XprType&, const UnaryOp&) [with UnaryOp = Eigen::internal::scalar_add_op<double>; XprType = const Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> >]’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/../plugins/ArrayCwiseBinaryOps.h:189:10:   required from ‘const Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<typename Eigen::internal::traits<T>::Scalar>, const Derived> Eigen::ArrayBase<Derived>::operator+(const Scalar&) const [with Derived = Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> >; typename Eigen::internal::traits<T>::Scalar = double; Eigen::ArrayBase<Derived>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/ArrayBase.h:125:32:   required from ‘Derived& Eigen::ArrayBase<Derived>::operator+=(const Scalar&) [with Derived = Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> >; Eigen::ArrayBase<Derived>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:644:20:   required from ‘static void Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::run(SolverType&, const MatrixType&, int) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:734:106:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::computeDirect(const MatrixType&, int) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::SelfAdjointEigenSolver<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:90:7:   required from ‘static bool CGAL::Eigen_diagonalize_traits<FT, dim>::diagonalize_selfadjoint_matrix(CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix&, CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector&) [with FT = double; unsigned int dim = 3; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenMatrix = Eigen::Matrix<double, 3, 3>; CGAL::Eigen_diagonalize_traits<FT, dim>::EigenVector = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:140:46:   [ skipping 24 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:35: warning: implicitly-declared ‘constexpr Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> >::ArrayWrapper(const Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> >&)’ is deprecated [-Wdeprecated-copy]
   68 |       : m_xpr(xpr), m_functor(func) {}
      |                                   ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:350,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/ArrayBase.h:119:14: note: because ‘Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> >’ has user-provided ‘Derived& Eigen::ArrayBase<Derived>::operator=(const Eigen::ArrayBase<Derived>&) [with Derived = Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> >]’
  119 |     Derived& operator=(const ArrayBase& other)
      |              ^~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:297,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseUnaryOp.h: In instantiation of ‘Eigen::CwiseUnaryOp<UnaryOp, MatrixType>::CwiseUnaryOp(const XprType&, const UnaryOp&) [with UnaryOp = Eigen::internal::scalar_add_op<double>; XprType = const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >]’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/../plugins/ArrayCwiseBinaryOps.h:189:10:   required from ‘const Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<typename Eigen::internal::traits<T>::Scalar>, const Derived> Eigen::ArrayBase<Derived>::operator+(const Scalar&) const [with Derived = Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >; typename Eigen::internal::traits<T>::Scalar = double; Eigen::ArrayBase<Derived>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/../plugins/ArrayCwiseBinaryOps.h:208:16:   required from ‘const Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<typename Eigen::internal::traits<T>::Scalar>, const Derived> Eigen::ArrayBase<Derived>::operator-(const Scalar&) const [with Derived = Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >; typename Eigen::internal::traits<T>::Scalar = double; Eigen::ArrayBase<Derived>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/ArrayBase.h:127:32:   required from ‘Derived& Eigen::ArrayBase<Derived>::operator-=(const Scalar&) [with Derived = Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >; Eigen::ArrayBase<Derived>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:583:34:   required from ‘static void Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::run(SolverType&, const MatrixType&, int) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:734:106:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::computeDirect(const MatrixType&, int) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::SelfAdjointEigenSolver<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:90:7:   [ skipping 25 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:35: warning: implicitly-declared ‘Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >::ArrayWrapper(const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >&)’ is deprecated [-Wdeprecated-copy]
   68 |       : m_xpr(xpr), m_functor(func) {}
      |                                   ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:350,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/ArrayBase.h:119:14: note: because ‘Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >’ has user-provided ‘Derived& Eigen::ArrayBase<Derived>::operator=(const Eigen::ArrayBase<Derived>&) [with Derived = Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >]’
  119 |     Derived& operator=(const ArrayBase& other)
      |              ^~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:284,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> > > >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> > >; Derived = Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> > >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:552:62:   required from ‘Derived& Eigen::DenseBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> > >; Derived = Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/ArrayBase.h:127:20:   required from ‘Derived& Eigen::ArrayBase<Derived>::operator-=(const Scalar&) [with Derived = Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >; Eigen::ArrayBase<Derived>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:583:34:   required from ‘static void Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::run(SolverType&, const MatrixType&, int) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:734:106:   [ skipping 26 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Ref<Eigen::Matrix<double, 3, 1>, 0, Eigen::InnerStride<1> >, Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Derived = Eigen::Ref<Eigen::Matrix<double, 3, 1>, 0, Eigen::InnerStride<1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Ref<Eigen::Matrix<double, 3, 1>, 0, Eigen::InnerStride<1> >; OtherDerived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Derived = Eigen::Ref<Eigen::Matrix<double, 3, 1>, 0, Eigen::InnerStride<1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:557:20:   required from ‘static bool Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::extract_kernel(Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType&, Eigen::Ref<typename SolverType::RealVectorType>, Eigen::Ref<typename SolverType::RealVectorType>) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::conditional<typename SolverType::RealVectorType::IsVectorAtCompileTime, Eigen::InnerStride<1>, Eigen::OuterStride<> >::type = Eigen::InnerStride<1>; typename SolverType::RealVectorType = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:617:25:   required from ‘static void Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::run(SolverType&, const MatrixType&, int) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:734:106:   [ skipping 26 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Ref<Eigen::Matrix<double, 3, 1>, 0, Eigen::InnerStride<1> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, 3, 1> > >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Ref<Eigen::Matrix<double, 3, 1>, 0, Eigen::InnerStride<1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Ref<Eigen::Matrix<double, 3, 1>, 0, Eigen::InnerStride<1> >; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, 3, 1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Ref<Eigen::Matrix<double, 3, 1>, 0, Eigen::InnerStride<1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:562:19:   required from ‘static bool Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::extract_kernel(Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType&, Eigen::Ref<typename SolverType::RealVectorType>, Eigen::Ref<typename SolverType::RealVectorType>) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::conditional<typename SolverType::RealVectorType::IsVectorAtCompileTime, Eigen::InnerStride<1>, Eigen::OuterStride<> >::type = Eigen::InnerStride<1>; typename SolverType::RealVectorType = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:617:25:   required from ‘static void Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::run(SolverType&, const MatrixType&, int) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:734:106:   [ skipping 26 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:296,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_conj_product_op<double, double>; Lhs = const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Rhs = const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>]’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:44:10:   required from ‘const Eigen::CwiseBinaryOp<CustomBinaryOp, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::binaryExpr(const Eigen::MatrixBase<OtherDerived>&, const CustomBinaryOp&) const [with CustomBinaryOp = Eigen::internal::scalar_conj_product_op<double, double>; OtherDerived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Dot.h:34:117:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; U = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; bool NeedToTranspose = false; Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Dot.h:73:58:   required from ‘typename Eigen::internal::scalar_product_traits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; typename Eigen::internal::scalar_product_traits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:625:60:   required from ‘static void Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::run(SolverType&, const MatrixType&, int) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:734:106:   required from ‘Eigen::SelfAdjointEigenSolver<MatrixType>& Eigen::SelfAdjointEigenSolver<_MatrixType>::computeDirect(const MatrixType&, int) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::SelfAdjointEigenSolver<_MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/CGAL/Eigen_diagonalize_traits.h:90:7:   [ skipping 25 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseBinaryOp.h:127:49: warning: implicitly-declared ‘Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>::Block(const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>&)’ is deprecated [-Wdeprecated-copy]
  127 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:20,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/util/Macros.h:606:32: note: because ‘Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = Eigen::Matrix<double, 3, 3>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]’
  606 |   EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                ^~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/util/Macros.h:617:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  617 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Block.h:155:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  155 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:296,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseBinaryOp.h:127:49: warning: implicitly-declared ‘Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>::Block(const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>&)’ is deprecated [-Wdeprecated-copy]
  127 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:20,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/util/Macros.h:606:32: note: because ‘Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = Eigen::Matrix<double, 3, 3>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]’
  606 |   EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                ^~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/util/Macros.h:617:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  617 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Block.h:155:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  155 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:284,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> > > >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> >; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> > >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:552:62:   required from ‘Derived& Eigen::DenseBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/ArrayBase.h:125:20:   required from ‘Derived& Eigen::ArrayBase<Derived>::operator+=(const Scalar&) [with Derived = Eigen::ArrayWrapper<Eigen::Matrix<double, 3, 1> >; Eigen::ArrayBase<Derived>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:644:20:   required from ‘static void Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::run(SolverType&, const MatrixType&, int) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:734:106:   [ skipping 26 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, 3, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; BinaryOp = Eigen::internal::scalar_product_op<double, double>; Lhs = Eigen::Matrix<double, 3, 1>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, 3, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, 3, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_product_op<double, double>; Lhs = Eigen::Matrix<double, 3, 1>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:176:7:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:481:14:   [ skipping 26 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Matrix<double, 3, 3>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; BinaryOp = Eigen::internal::scalar_quotient_op<double, double>; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Matrix<double, 3, 3>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Matrix<double, 3, 3>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_quotient_op<double, double>; Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:185:7:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 3>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:585:29:   [ skipping 27 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> > >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> > >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> >; BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> > >; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> > >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseBinaryOp.h:210:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true> >; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:625:25:   [ skipping 27 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:297,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseUnaryOp.h: In instantiation of ‘Eigen::CwiseUnaryOp<UnaryOp, MatrixType>::CwiseUnaryOp(const XprType&, const UnaryOp&) [with UnaryOp = Eigen::internal::scalar_abs2_op<double>; XprType = const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>]’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/../plugins/MatrixCwiseUnaryOps.h:31:36:   required from ‘const Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<typename Eigen::internal::traits<T>::Scalar>, const Derived> Eigen::MatrixBase<Derived>::cwiseAbs2() const [with Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Dot.h:115:31:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Dot.h:128:15:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Dot.h:156:12:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:626:11:   required from ‘static void Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::run(SolverType&, const MatrixType&, int) [with SolverType = Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 3, 3> >; Eigen::internal::direct_selfadjoint_eigenvalues<SolverType, 3, false>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:734:106:   [ skipping 26 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:35: warning: implicitly-declared ‘Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>::Block(const Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>&)’ is deprecated [-Wdeprecated-copy]
   68 |       : m_xpr(xpr), m_functor(func) {}
      |                                   ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:20,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/util/Macros.h:606:32: note: because ‘Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = Eigen::Matrix<double, 3, 3>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]’
  606 |   EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                ^~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/util/Macros.h:617:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  617 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Block.h:155:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  155 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:306,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Block.h: In instantiation of ‘Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::Index) [with XprType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = true; Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::Index = long int]’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Block.h:156:57:   required from ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::Index) [with XprType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = true; Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::Index = long int]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Block.h:114:53:   required from ‘Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Index) [with XprType = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = true; Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Index = long int]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/../plugins/BlockMethods.h:734:10:   required from ‘Eigen::DenseBase<Derived>::ColXpr Eigen::DenseBase<Derived>::col(Eigen::DenseBase<Derived>::Index) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Eigen::DenseBase<Derived>::ColXpr = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, 1, true>; Eigen::DenseBase<Derived>::Index = long int]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Jacobi/Jacobi.h:294:10:   required from ‘void Eigen::MatrixBase<Derived>::applyOnTheRight(Eigen::MatrixBase<Derived>::Index, Eigen::MatrixBase<Derived>::Index, const Eigen::JacobiRotation<OtherScalar>&) [with OtherScalar = double; Derived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >; Eigen::MatrixBase<Derived>::Index = long int]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:792:7:   required from ‘void Eigen::internal::tridiagonal_qr_step(RealScalar*, RealScalar*, Index, Index, Scalar*, Index) [with RealScalar = double; Scalar = double; Index = long int]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h:454:34:   [ skipping 26 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Block.h:331:18: warning: implicitly-declared ‘Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >::Map(const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >&)’ is deprecated [-Wdeprecated-copy]
  331 |         m_xpr(xpr)
      |                  ^
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:303,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/MapBase.h:236:14: note: because ‘Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >’ has user-provided ‘Derived& Eigen::MapBase<Derived, 1>::operator=(const Eigen::MapBase<Derived, 1>&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >]’
  236 |     Derived& operator=(const MapBase& other)
      |              ^~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:284,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 1>, Eigen::Matrix<double, 3, 1> >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:638:102:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:630:7:   [ skipping 27 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h: In instantiation of ‘CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::operator()(const L0&, const L1&, const L2&, const L3&) const [with L0 = CGAL::Return_base_tag; L1 = CGAL::Point_3<CGAL::Epeck>; L2 = CGAL::Point_3<CGAL::Epeck>; L3 = CGAL::Point_3<CGAL::Epeck>; LK = CGAL::Epeck; AC = CGAL::CommonKernelFunctors::Construct_triangle_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CommonKernelFunctors::Construct_triangle_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A_ = CGAL::Default; CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type = CGAL::Triangle_3<CGAL::Epeck>]’:
/usr/local/include/CGAL/Triangle_3.h:65:45:   required from ‘CGAL::Triangle_3<R_>::Triangle_3(const Point_3&, const Point_3&, const Point_3&) [with R_ = CGAL::Epeck; CGAL::Triangle_3<R_>::Point_3 = CGAL::Point_3<CGAL::Epeck>]’
/usr/local/include/CGAL/Cartesian_converter.h:352:9:   required from ‘typename K2::Triangle_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Triangle_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Triangle_3 = CGAL::Triangle_3<CGAL::Epeck>; typename K1::Triangle_3 = CGAL::Triangle_3<CGAL::Epick>]’
/usr/local/include/CGAL/Mesh_3/Robust_intersection_traits_3.h:497:51:   required from ‘typename CGAL::cpp11::result_of<typename K_::Intersect_3(T1, T2)>::type CGAL::Mesh_3::Robust_intersection_3_new<K_>::operator()(const T1&, const T2&) const [with T1 = CGAL::Triangle_3<CGAL::Epick>; T2 = CGAL::Line_3<CGAL::Epick>; K_ = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; typename CGAL::cpp11::result_of<typename K_::Intersect_3(T1, T2)>::type = boost::optional<boost::variant<CGAL::Point_3<CGAL::Epick>, CGAL::Segment_3<CGAL::Epick> > >]’
/usr/local/include/CGAL/AABB_traits.h:367:54:   required from ‘boost::optional<typename CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection_and_primitive_id<Query>::Type> CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection::operator()(const Query&, const Primitive&) const [with Query = CGAL::Line_3<CGAL::Epick>; GeomTraits = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; AABBPrimitive = CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >; BboxMap = CGAL::Default; typename CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection_and_primitive_id<Query>::Type = std::pair<boost::variant<CGAL::Point_3<CGAL::Epick>, CGAL::Segment_3<CGAL::Epick> >, std::pair<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_face<CGAL::I_Polyhedron_facet<CGAL::Mesh_3::Mesh_polyhedron_face<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Boolean_tag<false>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_face<CGAL::I_Polyhedron_facet<CGAL::Mesh_3::Mesh_polyhedron_face<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Boolean_tag<false>, int> > > > >, const CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >*> >; CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Primitive = CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >]’
/usr/local/include/CGAL/internal/AABB_tree/AABB_traversal_traits.h:85:46:   required from ‘void CGAL::internal::AABB_tree::First_intersection_traits<AABBTraits, Query>::intersection(const Query&, const Primitive&) [with AABBTraits = CGAL::AABB_traits<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >, CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >, CGAL::Default>; Query = CGAL::Line_3<CGAL::Epick>; CGAL::internal::AABB_tree::First_intersection_traits<AABBTraits, Query>::Primitive = CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >]’
/usr/local/include/CGAL/AABB_tree.h:507:5:   [ skipping 26 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Lazy.h:1634:3: error: no matching function for call to ‘exact(const CGAL::Return_base_tag&)’
 1634 |   BOOST_PP_REPEAT_FROM_TO(1, 9, CGAL_CONSTRUCTION_OPERATOR, _)
      |   ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:84:1: note: candidate: ‘template<class AT, class ET, class E2A> const ET& CGAL::exact(const CGAL::Lazy<AT, ET, E2A>&)’
   84 | exact(const Lazy<AT,ET,E2A>& l)
      | ^~~~~
/usr/local/include/CGAL/Lazy.h:84:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:1634:3: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
 1634 |   BOOST_PP_REPEAT_FROM_TO(1, 9, CGAL_CONSTRUCTION_OPERATOR, _)
      |   ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::exact(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::exact(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note: candidate: ‘template<class T, class> auto CGAL::exact(const T&)’
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      |      ^~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h: In instantiation of ‘CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::operator()(const L0&, const L1&, const L2&) const [with L0 = CGAL::Return_base_tag; L1 = CGAL::Point_3<CGAL::Epeck>; L2 = CGAL::Vector_3<CGAL::Epeck>; LK = CGAL::Epeck; AC = CGAL::CartesianKernelFunctors::Construct_line_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CartesianKernelFunctors::Construct_line_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A_ = CGAL::Default; CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type = CGAL::Line_3<CGAL::Epeck>]’:
/usr/local/include/CGAL/Line_3.h:82:43:   required from ‘CGAL::Line_3<R_>::Line_3(const Point_3&, const Vector_3&) [with R_ = CGAL::Epeck; CGAL::Line_3<R_>::Point_3 = CGAL::Point_3<CGAL::Epeck>; CGAL::Line_3<R_>::Vector_3 = CGAL::Vector_3<CGAL::Epeck>]’
/usr/local/include/CGAL/Cartesian_converter.h:321:9:   required from ‘typename K2::Line_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Line_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Line_3 = CGAL::Line_3<CGAL::Epeck>; typename K1::Line_3 = CGAL::Line_3<CGAL::Epick>]’
/usr/local/include/CGAL/Mesh_3/Robust_intersection_traits_3.h:497:64:   required from ‘typename CGAL::cpp11::result_of<typename K_::Intersect_3(T1, T2)>::type CGAL::Mesh_3::Robust_intersection_3_new<K_>::operator()(const T1&, const T2&) const [with T1 = CGAL::Triangle_3<CGAL::Epick>; T2 = CGAL::Line_3<CGAL::Epick>; K_ = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; typename CGAL::cpp11::result_of<typename K_::Intersect_3(T1, T2)>::type = boost::optional<boost::variant<CGAL::Point_3<CGAL::Epick>, CGAL::Segment_3<CGAL::Epick> > >]’
/usr/local/include/CGAL/AABB_traits.h:367:54:   required from ‘boost::optional<typename CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection_and_primitive_id<Query>::Type> CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection::operator()(const Query&, const Primitive&) const [with Query = CGAL::Line_3<CGAL::Epick>; GeomTraits = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; AABBPrimitive = CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >; BboxMap = CGAL::Default; typename CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection_and_primitive_id<Query>::Type = std::pair<boost::variant<CGAL::Point_3<CGAL::Epick>, CGAL::Segment_3<CGAL::Epick> >, std::pair<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_face<CGAL::I_Polyhedron_facet<CGAL::Mesh_3::Mesh_polyhedron_face<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Boolean_tag<false>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_face<CGAL::I_Polyhedron_facet<CGAL::Mesh_3::Mesh_polyhedron_face<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Boolean_tag<false>, int> > > > >, const CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >*> >; CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Primitive = CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >]’
/usr/local/include/CGAL/internal/AABB_tree/AABB_traversal_traits.h:85:46:   required from ‘void CGAL::internal::AABB_tree::First_intersection_traits<AABBTraits, Query>::intersection(const Query&, const Primitive&) [with AABBTraits = CGAL::AABB_traits<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >, CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >, CGAL::Default>; Query = CGAL::Line_3<CGAL::Epick>; CGAL::internal::AABB_tree::First_intersection_traits<AABBTraits, Query>::Primitive = CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >]’
/usr/local/include/CGAL/AABB_tree.h:507:5:   [ skipping 26 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Lazy.h:1634:3: error: no matching function for call to ‘exact(const CGAL::Return_base_tag&)’
 1634 |   BOOST_PP_REPEAT_FROM_TO(1, 9, CGAL_CONSTRUCTION_OPERATOR, _)
      |   ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:84:1: note: candidate: ‘template<class AT, class ET, class E2A> const ET& CGAL::exact(const CGAL::Lazy<AT, ET, E2A>&)’
   84 | exact(const Lazy<AT,ET,E2A>& l)
      | ^~~~~
/usr/local/include/CGAL/Lazy.h:84:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:1634:3: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
 1634 |   BOOST_PP_REPEAT_FROM_TO(1, 9, CGAL_CONSTRUCTION_OPERATOR, _)
      |   ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::exact(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::exact(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note: candidate: ‘template<class T, class> auto CGAL::exact(const T&)’
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      |      ^~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note:   template argument deduction/substitution failed:
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:284,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; BinaryOp = Eigen::internal::scalar_quotient_op<double, double>; Lhs = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_quotient_op<double, double>; Lhs = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:185:7:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 3, 1, true>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Dot.h:156:9:   [ skipping 28 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, 3, 1> > >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, 3, 1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Dot.h:144:21:   [ skipping 28 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h: In instantiation of ‘CGAL::Lazy_rep_n<AT, ET, AC, EC, E2A, L>::Lazy_rep_n(const AC&, const EC&, LL&& ...) [with LL = {const CGAL::Return_base_tag&, const CGAL::Point_3<CGAL::Epeck>&, const CGAL::Point_3<CGAL::Epeck>&, const CGAL::Point_3<CGAL::Epeck>&}; AT = CGAL::Triangle_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; ET = CGAL::Triangle_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; AC = CGAL::CommonKernelFunctors::Construct_triangle_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CommonKernelFunctors::Construct_triangle_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A = CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; L = {CGAL::Return_base_tag, CGAL::Point_3<CGAL::Epeck>, CGAL::Point_3<CGAL::Epeck>, CGAL::Point_3<CGAL::Epeck>}]’:
/usr/local/include/CGAL/Lazy.h:1634:3:   required from ‘CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::operator()(const L0&, const L1&, const L2&, const L3&) const [with L0 = CGAL::Return_base_tag; L1 = CGAL::Point_3<CGAL::Epeck>; L2 = CGAL::Point_3<CGAL::Epeck>; L3 = CGAL::Point_3<CGAL::Epeck>; LK = CGAL::Epeck; AC = CGAL::CommonKernelFunctors::Construct_triangle_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CommonKernelFunctors::Construct_triangle_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A_ = CGAL::Default; CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type = CGAL::Triangle_3<CGAL::Epeck>]’
/usr/local/include/CGAL/Triangle_3.h:65:45:   required from ‘CGAL::Triangle_3<R_>::Triangle_3(const Point_3&, const Point_3&, const Point_3&) [with R_ = CGAL::Epeck; CGAL::Triangle_3<R_>::Point_3 = CGAL::Point_3<CGAL::Epeck>]’
/usr/local/include/CGAL/Cartesian_converter.h:352:9:   required from ‘typename K2::Triangle_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Triangle_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Triangle_3 = CGAL::Triangle_3<CGAL::Epeck>; typename K1::Triangle_3 = CGAL::Triangle_3<CGAL::Epick>]’
/usr/local/include/CGAL/Mesh_3/Robust_intersection_traits_3.h:497:51:   required from ‘typename CGAL::cpp11::result_of<typename K_::Intersect_3(T1, T2)>::type CGAL::Mesh_3::Robust_intersection_3_new<K_>::operator()(const T1&, const T2&) const [with T1 = CGAL::Triangle_3<CGAL::Epick>; T2 = CGAL::Line_3<CGAL::Epick>; K_ = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; typename CGAL::cpp11::result_of<typename K_::Intersect_3(T1, T2)>::type = boost::optional<boost::variant<CGAL::Point_3<CGAL::Epick>, CGAL::Segment_3<CGAL::Epick> > >]’
/usr/local/include/CGAL/AABB_traits.h:367:54:   required from ‘boost::optional<typename CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection_and_primitive_id<Query>::Type> CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection::operator()(const Query&, const Primitive&) const [with Query = CGAL::Line_3<CGAL::Epick>; GeomTraits = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; AABBPrimitive = CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >; BboxMap = CGAL::Default; typename CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection_and_primitive_id<Query>::Type = std::pair<boost::variant<CGAL::Point_3<CGAL::Epick>, CGAL::Segment_3<CGAL::Epick> >, std::pair<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_face<CGAL::I_Polyhedron_facet<CGAL::Mesh_3::Mesh_polyhedron_face<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Boolean_tag<false>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_face<CGAL::I_Polyhedron_facet<CGAL::Mesh_3::Mesh_polyhedron_face<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Boolean_tag<false>, int> > > > >, const CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >*> >; CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Primitive = CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >]’
/usr/local/include/CGAL/internal/AABB_tree/AABB_traversal_traits.h:85:46:   [ skipping 27 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Lazy.h:331:42: error: no matching function for call to ‘approx(const CGAL::Return_base_tag&)’
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:66:1: note: candidate: ‘template<class AT, class ET, class E2A> const AT& CGAL::approx(const CGAL::Lazy<AT, ET, E2A>&)’
   66 | approx(const Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:66:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:331:42: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:75:1: note: candidate: ‘template<class AT, class ET, class E2A> AT& CGAL::approx(CGAL::Lazy<AT, ET, E2A>&)’
   75 | approx(Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:75:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:331:42: note:   types ‘CGAL::Lazy<AT, ET, E2A>’ and ‘const CGAL::Return_base_tag’ have incompatible cv-qualifiers
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::approx(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::approx(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note: candidate: ‘template<class T, class> auto CGAL::approx(const T&)’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |      ^~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:54: error: no matching function for call to ‘depth(const CGAL::Return_base_tag&)’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                                           ~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:93:1: note: candidate: ‘template<class AT, class ET, class E2A> unsigned int CGAL::depth(const CGAL::Lazy<AT, ET, E2A>&)’
   93 | depth(const Lazy<AT,ET,E2A>& l)
      | ^~~~~
/usr/local/include/CGAL/Lazy.h:93:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:54: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                                           ~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘unsigned int CGAL::depth(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘unsigned int CGAL::depth(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:123:10: note: candidate: ‘template<class T, class> unsigned int CGAL::depth(const T&)’
  123 | unsigned depth(T const&) {return 1;} // FIXME: depth(*t) would be better when t is valid, but not for end iterators, and the true answer would iterate on the range, but we can't do that with only one iterator... We need to replace iterators with ranges to solve that.
      |          ^~~~~
/usr/local/include/CGAL/Lazy.h:123:10: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: error: no matching function for call to ‘max(<brace-enclosed initializer list>)’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/bits/char_traits.h:39,
                 from /usr/include/c++/9/string:40,
                 from /usr/include/c++/9/stdexcept:39,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:55,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algobase.h:222:5: note: candidate: ‘template<class _Tp> const _Tp& std::max(const _Tp&, const _Tp&)’
  222 |     max(const _Tp& __a, const _Tp& __b)
      |     ^~~
/usr/include/c++/9/bits/stl_algobase.h:222:5: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: note:   candidate expects 2 arguments, 1 provided
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/bits/char_traits.h:39,
                 from /usr/include/c++/9/string:40,
                 from /usr/include/c++/9/stdexcept:39,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:55,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algobase.h:268:5: note: candidate: ‘template<class _Tp, class _Compare> const _Tp& std::max(const _Tp&, const _Tp&, _Compare)’
  268 |     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
      |     ^~~
/usr/include/c++/9/bits/stl_algobase.h:268:5: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: note:   candidate expects 3 arguments, 1 provided
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/algorithm:62,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:57,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algo.h:3456:5: note: candidate: ‘template<class _Tp> _Tp std::max(std::initializer_list<_Tp>)’
 3456 |     max(initializer_list<_Tp> __l)
      |     ^~~
/usr/include/c++/9/bits/stl_algo.h:3456:5: note:   template argument deduction/substitution failed:
/usr/include/c++/9/bits/stl_algo.h:3462:5: note: candidate: ‘template<class _Tp, class _Compare> _Tp std::max(std::initializer_list<_Tp>, _Compare)’
 3462 |     max(initializer_list<_Tp> __l, _Compare __comp)
      |     ^~~
/usr/include/c++/9/bits/stl_algo.h:3462:5: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h: In instantiation of ‘CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::operator()(const L0&, const L1&, const L2&, const L3&) const [with L0 = CGAL::Return_base_tag; L1 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; L2 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; L3 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; LK = CGAL::Epeck; AC = CGAL::CartesianKernelFunctors::Construct_vector_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CartesianKernelFunctors::Construct_vector_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A_ = CGAL::Default; CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type = CGAL::Vector_3<CGAL::Epeck>]’:
/usr/local/include/CGAL/Vector_3.h:91:43:   required from ‘CGAL::Vector_3<R_>::Vector_3(const T1&, const T2&, const T3&) [with T1 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; T2 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; T3 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; R_ = CGAL::Epeck]’
/usr/local/include/CGAL/Cartesian_converter.h:300:9:   required from ‘typename K2::Vector_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Vector_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Vector_3 = CGAL::Vector_3<CGAL::Epeck>; typename K1::Vector_3 = CGAL::Vector_3<CGAL::Epick>]’
/usr/local/include/CGAL/Cartesian_converter.h:321:9:   required from ‘typename K2::Line_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Line_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Line_3 = CGAL::Line_3<CGAL::Epeck>; typename K1::Line_3 = CGAL::Line_3<CGAL::Epick>]’
/usr/local/include/CGAL/Mesh_3/Robust_intersection_traits_3.h:497:64:   required from ‘typename CGAL::cpp11::result_of<typename K_::Intersect_3(T1, T2)>::type CGAL::Mesh_3::Robust_intersection_3_new<K_>::operator()(const T1&, const T2&) const [with T1 = CGAL::Triangle_3<CGAL::Epick>; T2 = CGAL::Line_3<CGAL::Epick>; K_ = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; typename CGAL::cpp11::result_of<typename K_::Intersect_3(T1, T2)>::type = boost::optional<boost::variant<CGAL::Point_3<CGAL::Epick>, CGAL::Segment_3<CGAL::Epick> > >]’
/usr/local/include/CGAL/AABB_traits.h:367:54:   required from ‘boost::optional<typename CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection_and_primitive_id<Query>::Type> CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection::operator()(const Query&, const Primitive&) const [with Query = CGAL::Line_3<CGAL::Epick>; GeomTraits = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; AABBPrimitive = CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >; BboxMap = CGAL::Default; typename CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection_and_primitive_id<Query>::Type = std::pair<boost::variant<CGAL::Point_3<CGAL::Epick>, CGAL::Segment_3<CGAL::Epick> >, std::pair<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_face<CGAL::I_Polyhedron_facet<CGAL::Mesh_3::Mesh_polyhedron_face<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Boolean_tag<false>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_face<CGAL::I_Polyhedron_facet<CGAL::Mesh_3::Mesh_polyhedron_face<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Boolean_tag<false>, int> > > > >, const CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >*> >; CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Primitive = CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >]’
/usr/local/include/CGAL/internal/AABB_tree/AABB_traversal_traits.h:85:46:   [ skipping 27 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Lazy.h:1634:3: error: no matching function for call to ‘exact(const CGAL::Return_base_tag&)’
 1634 |   BOOST_PP_REPEAT_FROM_TO(1, 9, CGAL_CONSTRUCTION_OPERATOR, _)
      |   ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:84:1: note: candidate: ‘template<class AT, class ET, class E2A> const ET& CGAL::exact(const CGAL::Lazy<AT, ET, E2A>&)’
   84 | exact(const Lazy<AT,ET,E2A>& l)
      | ^~~~~
/usr/local/include/CGAL/Lazy.h:84:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:1634:3: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
 1634 |   BOOST_PP_REPEAT_FROM_TO(1, 9, CGAL_CONSTRUCTION_OPERATOR, _)
      |   ^~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::exact(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::exact(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note: candidate: ‘template<class T, class> auto CGAL::exact(const T&)’
  119 | auto exact(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::exact(u);});}
      |      ^~~~~
/usr/local/include/CGAL/Lazy.h:119:6: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h: In instantiation of ‘CGAL::Lazy_rep_n<AT, ET, AC, EC, E2A, L>::Lazy_rep_n(const AC&, const EC&, LL&& ...) [with LL = {const CGAL::Return_base_tag&, const CGAL::Point_3<CGAL::Epeck>&, const CGAL::Vector_3<CGAL::Epeck>&}; AT = CGAL::Line_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; ET = CGAL::Line_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; AC = CGAL::CartesianKernelFunctors::Construct_line_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CartesianKernelFunctors::Construct_line_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A = CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; L = {CGAL::Return_base_tag, CGAL::Point_3<CGAL::Epeck>, CGAL::Vector_3<CGAL::Epeck>}]’:
/usr/local/include/CGAL/Lazy.h:1634:3:   required from ‘CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::operator()(const L0&, const L1&, const L2&) const [with L0 = CGAL::Return_base_tag; L1 = CGAL::Point_3<CGAL::Epeck>; L2 = CGAL::Vector_3<CGAL::Epeck>; LK = CGAL::Epeck; AC = CGAL::CartesianKernelFunctors::Construct_line_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CartesianKernelFunctors::Construct_line_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A_ = CGAL::Default; CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type = CGAL::Line_3<CGAL::Epeck>]’
/usr/local/include/CGAL/Line_3.h:82:43:   required from ‘CGAL::Line_3<R_>::Line_3(const Point_3&, const Vector_3&) [with R_ = CGAL::Epeck; CGAL::Line_3<R_>::Point_3 = CGAL::Point_3<CGAL::Epeck>; CGAL::Line_3<R_>::Vector_3 = CGAL::Vector_3<CGAL::Epeck>]’
/usr/local/include/CGAL/Cartesian_converter.h:321:9:   required from ‘typename K2::Line_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Line_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Line_3 = CGAL::Line_3<CGAL::Epeck>; typename K1::Line_3 = CGAL::Line_3<CGAL::Epick>]’
/usr/local/include/CGAL/Mesh_3/Robust_intersection_traits_3.h:497:64:   required from ‘typename CGAL::cpp11::result_of<typename K_::Intersect_3(T1, T2)>::type CGAL::Mesh_3::Robust_intersection_3_new<K_>::operator()(const T1&, const T2&) const [with T1 = CGAL::Triangle_3<CGAL::Epick>; T2 = CGAL::Line_3<CGAL::Epick>; K_ = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; typename CGAL::cpp11::result_of<typename K_::Intersect_3(T1, T2)>::type = boost::optional<boost::variant<CGAL::Point_3<CGAL::Epick>, CGAL::Segment_3<CGAL::Epick> > >]’
/usr/local/include/CGAL/AABB_traits.h:367:54:   required from ‘boost::optional<typename CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection_and_primitive_id<Query>::Type> CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection::operator()(const Query&, const Primitive&) const [with Query = CGAL::Line_3<CGAL::Epick>; GeomTraits = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; AABBPrimitive = CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >; BboxMap = CGAL::Default; typename CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Intersection_and_primitive_id<Query>::Type = std::pair<boost::variant<CGAL::Point_3<CGAL::Epick>, CGAL::Segment_3<CGAL::Epick> >, std::pair<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_face<CGAL::I_Polyhedron_facet<CGAL::Mesh_3::Mesh_polyhedron_face<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Boolean_tag<false>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_face<CGAL::I_Polyhedron_facet<CGAL::Mesh_3::Mesh_polyhedron_face<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Boolean_tag<false>, int> > > > >, const CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >*> >; CGAL::AABB_traits<GeomTraits, AABBPrimitive, BboxMap>::Primitive = CGAL::AABB_face_graph_triangle_primitive<CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::internal::Point_accessor<CGAL::internal::In_place_list_iterator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > >, std::allocator<CGAL::HalfedgeDS_in_place_list_vertex<CGAL::I_Polyhedron_vertex<CGAL::Mesh_3::Mesh_polyhedron_vertex<CGAL::HalfedgeDS_list_types<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::I_Polyhedron_derived_items_3<CGAL::Mesh_3::Mesh_polyhedron_items<int> >, std::allocator<int> >, CGAL::Boolean_tag<true>, CGAL::Point_3<CGAL::Epick>, int> > > > >, CGAL::Point_3<CGAL::Epick>, CGAL::Point_3<CGAL::Epick>&, false>, CGAL::Boolean_tag<false>, CGAL::Boolean_tag<false> >]’
/usr/local/include/CGAL/internal/AABB_tree/AABB_traversal_traits.h:85:46:   [ skipping 27 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Lazy.h:331:42: error: no matching function for call to ‘approx(const CGAL::Return_base_tag&)’
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:66:1: note: candidate: ‘template<class AT, class ET, class E2A> const AT& CGAL::approx(const CGAL::Lazy<AT, ET, E2A>&)’
   66 | approx(const Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:66:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:331:42: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:75:1: note: candidate: ‘template<class AT, class ET, class E2A> AT& CGAL::approx(CGAL::Lazy<AT, ET, E2A>&)’
   75 | approx(Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:75:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:331:42: note:   types ‘CGAL::Lazy<AT, ET, E2A>’ and ‘const CGAL::Return_base_tag’ have incompatible cv-qualifiers
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::approx(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::approx(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note: candidate: ‘template<class T, class> auto CGAL::approx(const T&)’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |      ^~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:54: error: no matching function for call to ‘depth(const CGAL::Return_base_tag&)’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                                           ~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:93:1: note: candidate: ‘template<class AT, class ET, class E2A> unsigned int CGAL::depth(const CGAL::Lazy<AT, ET, E2A>&)’
   93 | depth(const Lazy<AT,ET,E2A>& l)
      | ^~~~~
/usr/local/include/CGAL/Lazy.h:93:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:54: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                                           ~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘unsigned int CGAL::depth(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘unsigned int CGAL::depth(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:123:10: note: candidate: ‘template<class T, class> unsigned int CGAL::depth(const T&)’
  123 | unsigned depth(T const&) {return 1;} // FIXME: depth(*t) would be better when t is valid, but not for end iterators, and the true answer would iterate on the range, but we can't do that with only one iterator... We need to replace iterators with ranges to solve that.
      |          ^~~~~
/usr/local/include/CGAL/Lazy.h:123:10: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: error: no matching function for call to ‘max(<brace-enclosed initializer list>)’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/bits/char_traits.h:39,
                 from /usr/include/c++/9/string:40,
                 from /usr/include/c++/9/stdexcept:39,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:55,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algobase.h:222:5: note: candidate: ‘template<class _Tp> const _Tp& std::max(const _Tp&, const _Tp&)’
  222 |     max(const _Tp& __a, const _Tp& __b)
      |     ^~~
/usr/include/c++/9/bits/stl_algobase.h:222:5: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: note:   candidate expects 2 arguments, 1 provided
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/bits/char_traits.h:39,
                 from /usr/include/c++/9/string:40,
                 from /usr/include/c++/9/stdexcept:39,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:55,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algobase.h:268:5: note: candidate: ‘template<class _Tp, class _Compare> const _Tp& std::max(const _Tp&, const _Tp&, _Compare)’
  268 |     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
      |     ^~~
/usr/include/c++/9/bits/stl_algobase.h:268:5: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: note:   candidate expects 3 arguments, 1 provided
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/algorithm:62,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:57,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algo.h:3456:5: note: candidate: ‘template<class _Tp> _Tp std::max(std::initializer_list<_Tp>)’
 3456 |     max(initializer_list<_Tp> __l)
      |     ^~~
/usr/include/c++/9/bits/stl_algo.h:3456:5: note:   template argument deduction/substitution failed:
/usr/include/c++/9/bits/stl_algo.h:3462:5: note: candidate: ‘template<class _Tp, class _Compare> _Tp std::max(std::initializer_list<_Tp>, _Compare)’
 3462 |     max(initializer_list<_Tp> __l, _Compare __comp)
      |     ^~~
/usr/include/c++/9/bits/stl_algo.h:3462:5: note:   template argument deduction/substitution failed:
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:284,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SwapWrapper<Eigen::Matrix<double, 3, 1> >, Eigen::Matrix<double, 3, 1> >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::SwapWrapper<Eigen::Matrix<double, 3, 1> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/DenseBase.h:384:7:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:805:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 3, 1>; MatrixTypeB = Eigen::Matrix<double, 3, 1>; bool SwapPointers = false]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:682:81:   required from ‘void Eigen::PlainObjectBase<Derived>::_swap(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Matrix.h:334:7:   required from ‘void Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::swap(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Matrix.h:224:7:   [ skipping 29 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h: In instantiation of ‘CGAL::Lazy_rep_n<AT, ET, AC, EC, E2A, L>::Lazy_rep_n(const AC&, const EC&, LL&& ...) [with LL = {const CGAL::Return_base_tag&, const CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >&, const CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >&, const CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >&}; AT = CGAL::Vector_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; ET = CGAL::Vector_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; AC = CGAL::CartesianKernelFunctors::Construct_vector_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CartesianKernelFunctors::Construct_vector_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A = CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; L = {CGAL::Return_base_tag, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational, boost::multiprecision::et_on> >}]’:
/usr/local/include/CGAL/Lazy.h:1634:3:   required from ‘CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::operator()(const L0&, const L1&, const L2&, const L3&) const [with L0 = CGAL::Return_base_tag; L1 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; L2 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; L3 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; LK = CGAL::Epeck; AC = CGAL::CartesianKernelFunctors::Construct_vector_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >; EC = CGAL::CartesianKernelFunctors::Construct_vector_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; E2A_ = CGAL::Default; CGAL::Lazy_construction<LK, AC, EC, E2A_, true>::result_type = CGAL::Vector_3<CGAL::Epeck>]’
/usr/local/include/CGAL/Vector_3.h:91:43:   required from ‘CGAL::Vector_3<R_>::Vector_3(const T1&, const T2&, const T3&) [with T1 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; T2 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; T3 = CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >; R_ = CGAL::Epeck]’
/usr/local/include/CGAL/Cartesian_converter.h:300:9:   required from ‘typename K2::Vector_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Vector_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Vector_3 = CGAL::Vector_3<CGAL::Epeck>; typename K1::Vector_3 = CGAL::Vector_3<CGAL::Epick>]’
/usr/local/include/CGAL/Cartesian_converter.h:321:9:   required from ‘typename K2::Line_3 CGAL::Cartesian_converter<K1, K2, Converter>::operator()(const typename K1::Line_3&) const [with K1 = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; K2 = CGAL::Epeck; Converter = CGAL::NT_converter<double, CGAL::Lazy_exact_nt<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > >; typename K2::Line_3 = CGAL::Line_3<CGAL::Epeck>; typename K1::Line_3 = CGAL::Line_3<CGAL::Epick>]’
/usr/local/include/CGAL/Mesh_3/Robust_intersection_traits_3.h:497:64:   required from ‘typename CGAL::cpp11::result_of<typename K_::Intersect_3(T1, T2)>::type CGAL::Mesh_3::Robust_intersection_3_new<K_>::operator()(const T1&, const T2&) const [with T1 = CGAL::Triangle_3<CGAL::Epick>; T2 = CGAL::Line_3<CGAL::Epick>; K_ = CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>; typename CGAL::cpp11::result_of<typename K_::Intersect_3(T1, T2)>::type = boost::optional<boost::variant<CGAL::Point_3<CGAL::Epick>, CGAL::Segment_3<CGAL::Epick> > >]’
/usr/local/include/CGAL/AABB_traits.h:367:54:   [ skipping 28 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Lazy.h:331:42: error: no matching function for call to ‘approx(const CGAL::Return_base_tag&)’
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:66:1: note: candidate: ‘template<class AT, class ET, class E2A> const AT& CGAL::approx(const CGAL::Lazy<AT, ET, E2A>&)’
   66 | approx(const Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:66:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:331:42: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:75:1: note: candidate: ‘template<class AT, class ET, class E2A> AT& CGAL::approx(CGAL::Lazy<AT, ET, E2A>&)’
   75 | approx(Lazy<AT,ET,E2A>& l)
      | ^~~~~~
/usr/local/include/CGAL/Lazy.h:75:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:331:42: note:   types ‘CGAL::Lazy<AT, ET, E2A>’ and ‘const CGAL::Return_base_tag’ have incompatible cv-qualifiers
  331 |     Lazy_rep<AT, ET, E2A>(ac(CGAL::approx(ll)...)), EC(ec), l(std::forward<LL>(ll)...)
      |                              ~~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘const CGAL::Bbox_2& CGAL::approx(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘const CGAL::Bbox_3& CGAL::approx(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note: candidate: ‘template<class T, class> auto CGAL::approx(const T&)’
  121 | auto approx(T const& t) {return make_transforming_iterator(t,[](auto const&u){return CGAL::approx(u);});}
      |      ^~~~~~
/usr/local/include/CGAL/Lazy.h:121:6: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:54: error: no matching function for call to ‘depth(const CGAL::Return_base_tag&)’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                                           ~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:93:1: note: candidate: ‘template<class AT, class ET, class E2A> unsigned int CGAL::depth(const CGAL::Lazy<AT, ET, E2A>&)’
   93 | depth(const Lazy<AT,ET,E2A>& l)
      | ^~~~~
/usr/local/include/CGAL/Lazy.h:93:1: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:54: note:   ‘const CGAL::Return_base_tag’ is not derived from ‘const CGAL::Lazy<AT, ET, E2A>’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                                           ~~~~~~~~~~~^~~~
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:104:1: note: candidate: ‘unsigned int CGAL::depth(const CGAL::Bbox_2&)’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:104:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_2&’
  104 | CGAL_LAZY_FORWARD(Bbox_2)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note: candidate: ‘unsigned int CGAL::depth(const CGAL::Bbox_3&)’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:105:1: note:   no known conversion for argument 1 from ‘const CGAL::Return_base_tag’ to ‘const CGAL::Bbox_3&’
  105 | CGAL_LAZY_FORWARD(Bbox_3)
      | ^~~~~~~~~~~~~~~~~
/usr/local/include/CGAL/Lazy.h:123:10: note: candidate: ‘template<class T, class> unsigned int CGAL::depth(const T&)’
  123 | unsigned depth(T const&) {return 1;} // FIXME: depth(*t) would be better when t is valid, but not for end iterators, and the true answer would iterate on the range, but we can't do that with only one iterator... We need to replace iterators with ranges to solve that.
      |          ^~~~~
/usr/local/include/CGAL/Lazy.h:123:10: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: error: no matching function for call to ‘max(<brace-enclosed initializer list>)’
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/bits/char_traits.h:39,
                 from /usr/include/c++/9/string:40,
                 from /usr/include/c++/9/stdexcept:39,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:55,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algobase.h:222:5: note: candidate: ‘template<class _Tp> const _Tp& std::max(const _Tp&, const _Tp&)’
  222 |     max(const _Tp& __a, const _Tp& __b)
      |     ^~~
/usr/include/c++/9/bits/stl_algobase.h:222:5: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: note:   candidate expects 2 arguments, 1 provided
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/bits/char_traits.h:39,
                 from /usr/include/c++/9/string:40,
                 from /usr/include/c++/9/stdexcept:39,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:55,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algobase.h:268:5: note: candidate: ‘template<class _Tp, class _Compare> const _Tp& std::max(const _Tp&, const _Tp&, _Compare)’
  268 |     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
      |     ^~~
/usr/include/c++/9/bits/stl_algobase.h:268:5: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/CGAL/Lazy_exact_nt.h:33,
                 from /usr/local/include/CGAL/internal/Exact_type_selector.h:25,
                 from /usr/local/include/CGAL/Exact_kernel_selector.h:26,
                 from /usr/local/include/CGAL/Filtered_kernel.h:22,
                 from /usr/local/include/CGAL/Exact_predicates_inexact_constructions_kernel.h:21,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:36,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Lazy.h:333:31: note:   candidate expects 3 arguments, 1 provided
  333 |     this->set_depth((std::max)({ -1, (int)CGAL::depth(ll)...}) + 1);
      |                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/algorithm:62,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h:57,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:35,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/include/c++/9/bits/stl_algo.h:3456:5: note: candidate: ‘template<class _Tp> _Tp std::max(std::initializer_list<_Tp>)’
 3456 |     max(initializer_list<_Tp> __l)
      |     ^~~
/usr/include/c++/9/bits/stl_algo.h:3456:5: note:   template argument deduction/substitution failed:
/usr/include/c++/9/bits/stl_algo.h:3462:5: note: candidate: ‘template<class _Tp, class _Compare> _Tp std::max(std::initializer_list<_Tp>, _Compare)’
 3462 |     max(initializer_list<_Tp> __l, _Compare __comp)
      |     ^~~
/usr/include/c++/9/bits/stl_algo.h:3462:5: note:   template argument deduction/substitution failed:
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:284,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:638:102:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:630:7:   [ skipping 30 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:638:102:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:630:7:   [ skipping 31 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SwapWrapper<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3, 1, 3, 3> >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3, 1, 3, 3>; Derived = Eigen::SwapWrapper<Eigen::Matrix<double, 3, 3> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/DenseBase.h:384:7:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3, 1, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:805:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 3, 3>; MatrixTypeB = Eigen::Matrix<double, 3, 3, 1, 3, 3>; bool SwapPointers = false]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:682:81:   required from ‘void Eigen::PlainObjectBase<Derived>::_swap(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3, 1, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Matrix.h:334:7:   required from ‘void Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::swap(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3, 1, 3, 3>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/TriangularMatrix.h:687:5:   [ skipping 31 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Mesh_triangulation_3.h:27,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Robust_weighted_circumcenter_filtered_traits_3.h: In instantiation of ‘CGAL::Robust_filtered_compute_squared_radius_smallest_orthogonal_sphere_3<K_, CSRSOS_Base_>::FT CGAL::Robust_filtered_compute_squared_radius_smallest_orthogonal_sphere_3<K_, CSRSOS_Base_>::operator()(const Weighted_point_3&, const Weighted_point_3&) const [with K_ = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; CSRSOS_Base_ = CGAL::CommonKernelFunctors::Compute_squared_radius_smallest_orthogonal_sphere_3<CGAL::Epick>; CGAL::Robust_filtered_compute_squared_radius_smallest_orthogonal_sphere_3<K_, CSRSOS_Base_>::FT = double; CGAL::Robust_filtered_compute_squared_radius_smallest_orthogonal_sphere_3<K_, CSRSOS_Base_>::Weighted_point_3 = CGAL::Weighted_point_3<CGAL::Epick>]’:
/usr/local/include/CGAL/Mesh_3/mesh_standard_facet_criteria.h:706:36:   required from ‘CGAL::Mesh_3::Facet_criterion_visitor_with_features<Tr>::Facet_criterion_visitor_with_features(const Tr&, const Facet&) [with Tr = CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >; CGAL::Mesh_3::Facet_criterion_visitor_with_features<Tr>::Facet = std::pair<CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>, int>]’
/usr/local/include/CGAL/Mesh_3/mesh_standard_criteria.h:170:14:   required from ‘CGAL::Mesh_3::Criteria<Tr, Visitor_>::Is_bad CGAL::Mesh_3::Criteria<Tr, Visitor_>::operator()(const Tr&, const typename Visitor_::Handle&) const [with Tr = CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >; Visitor_ = CGAL::Mesh_3::Facet_criterion_visitor_with_features<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> > >; CGAL::Mesh_3::Criteria<Tr, Visitor_>::Is_bad = boost::optional<std::pair<int, double> >; typename Visitor_::Handle = std::pair<CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>, int>]’
/usr/local/include/CGAL/Mesh_facet_criteria_3.h:83:31:   required from ‘CGAL::Mesh_facet_criteria_3<Tr, Visitor_>::Is_facet_bad CGAL::Mesh_facet_criteria_3<Tr, Visitor_>::operator()(const Tr&, const Facet&) const [with Tr = CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >; Visitor_ = CGAL::Mesh_3::Facet_criterion_visitor_with_features<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> > >; CGAL::Mesh_facet_criteria_3<Tr, Visitor_>::Is_facet_bad = boost::optional<std::pair<int, double> >; CGAL::Mesh_facet_criteria_3<Tr, Visitor_>::Facet = std::pair<CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>, int>]’
/usr/local/include/CGAL/Mesh_3/Refine_facets_3.h:1573:50:   required from ‘void CGAL::Mesh_3::Refine_facets_3_base<Tr, Criteria, MeshDomain, Complex3InTriangulation3, Concurrency_tag, Container_>::treat_new_facet(CGAL::Mesh_3::Refine_facets_3_base<Tr, Criteria, MeshDomain, Complex3InTriangulation3, Concurrency_tag, Container_>::Facet&) [with Tr = CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >; Criteria = CGAL::Mesh_facet_criteria_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Mesh_3::Facet_criterion_visitor_with_features<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> > > >; MeshDomain = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >; Complex3InTriangulation3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>; Concurrency_tag = CGAL::Sequential_tag; Container_ = CGAL::Meshes::Double_map_container<std::pair<CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>, int>, std::pair<int, double> >; CGAL::Mesh_3::Refine_facets_3_base<Tr, Criteria, MeshDomain, Complex3InTriangulation3, Concurrency_tag, Container_>::Facet = std::pair<CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>, int>]’
/usr/local/include/CGAL/Mesh_3/Refine_facets_3.h:1015:7:   required from ‘void CGAL::Mesh_3::Refine_facets_3<Tr, Criteria, MeshDomain, Complex3InTriangulation3, Previous_level_, Concurrency_tag, Base_, Container_>::scan_triangulation_impl() [with Tr = CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >; Criteria = CGAL::Mesh_facet_criteria_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Mesh_3::Facet_criterion_visitor_with_features<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> > > >; MeshDomain = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >; Complex3InTriangulation3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>; Previous_level_ = CGAL::Mesh_3::Null_mesher_level; Concurrency_tag = CGAL::Sequential_tag; Base_ = CGAL::Mesh_3::Refine_facets_manifold_base; Container_ = CGAL::Meshes::Double_map_container<std::pair<CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>, int>, std::pair<int, double> >]’
/usr/local/include/CGAL/Mesh_3/Mesher_level.h:245:5:   [ skipping 32 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/make_mesh_3.h:390:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_390make_mesh_3_bp(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, criteria_type&&) [with ResultType = void; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::exude_param, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::exude_param, const CGAL::parameters::internal::Exude_options> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::perturb_param, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::perturb_param, const CGAL::parameters::internal::Perturb_options> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::criteria, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::criteria, const CGAL::Mesh_criteria_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, CGAL::Mesh_edge_criteria_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> > >, CGAL::Mesh_facet_criteria_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, CGAL::Mesh_3::Facet_criterion_visitor_with_features<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> > > >, CGAL::Mesh_cell_criteria_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, CGAL::Mesh_3::Cell_criteria_visitor_with_features<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> > > > > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, const CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = const CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; criteria_type = const CGAL::Mesh_criteria_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> > >&]’
/usr/local/include/CGAL/make_mesh_3.h:390:1:   required from ‘typename CGAL::boost_param_result_390make_mesh_3_bp<Args>::type CGAL::boost_param_impl390make_mesh_3_bp(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::exude_param, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::exude_param, const CGAL::parameters::internal::Exude_options> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::perturb_param, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::perturb_param, const CGAL::parameters::internal::Perturb_options> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::criteria, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::criteria, const CGAL::Mesh_criteria_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, CGAL::Mesh_edge_criteria_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> > >, CGAL::Mesh_facet_criteria_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, CGAL::Mesh_3::Facet_criterion_visitor_with_features<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> > > >, CGAL::Mesh_cell_criteria_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, CGAL::Mesh_3::Cell_criteria_visitor_with_features<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> > > > > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, const CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_390make_mesh_3_bp<Args>::type = void]’
/usr/local/include/CGAL/make_mesh_3.h:390:1:   required from ‘typename CGAL::boost_param_result_390make_mesh_3_bp<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_390make_mesh_3_bp<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, ParameterArgumentType3&&, ParameterArgumentType4&&>::type>::type CGAL::make_mesh_3_bp(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, ParameterArgumentType3&&, ParameterArgumentType4&&, typename boost::parameter::aux::match<CGAL::boost_param_params_390make_mesh_3_bp<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2, ParameterArgumentType3, ParameterArgumentType4>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = const CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = const CGAL::Mesh_criteria_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> > >&; ParameterArgumentType3 = const CGAL::parameters::internal::Perturb_options&; ParameterArgumentType4 = const CGAL::parameters::internal::Exude_options&; typename CGAL::boost_param_result_390make_mesh_3_bp<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_390make_mesh_3_bp<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, ParameterArgumentType3&&, ParameterArgumentType4&&>::type>::type = void; typename boost::parameter::aux::match<CGAL::boost_param_params_390make_mesh_3_bp<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2, ParameterArgumentType3, ParameterArgumentType4>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::criteria, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<boost::parameter::deduced<CGAL::parameters::tag::features_param>, boost::parameter::aux::unwrap_predicate<void(CGAL::parameters::internal::Features_options)>::type>, boost::parameter::optional<boost::parameter::deduced<CGAL::parameters::tag::exude_param>, boost::parameter::aux::unwrap_predicate<void(CGAL::parameters::internal::Exude_options)>::type>, boost::parameter::optional<boost::parameter::deduced<CGAL::parameters::tag::perturb_param>, boost::parameter::aux::unwrap_predicate<void(CGAL::parameters::internal::Perturb_options)>::type>, boost::parameter::optional<boost::parameter::deduced<CGAL::parameters::tag::odt_param>, boost::parameter::aux::unwrap_predicate<void(CGAL::parameters::internal::Odt_options)>::type>, boost::parameter::optional<boost::parameter::deduced<CGAL::parameters::tag::lloyd_param>, boost::parameter::aux::unwrap_predicate<void(CGAL::parameters::internal::Lloyd_options)>::type>, boost::parameter::optional<boost::parameter::deduced<CGAL::parameters::tag::mesh_options_param>, boost::parameter::aux::unwrap_predicate<void(CGAL::parameters::internal::Mesh_3_options)>::type>, boost::parameter::optional<boost::parameter::deduced<CGAL::parameters::tag::manifold_options_param>, boost::parameter::aux::unwrap_predicate<void(CGAL::parameters::internal::Manifold_options)>::type> >]’
/usr/local/include/CGAL/make_mesh_3.h:376:17:   required from ‘C3T3 CGAL::make_mesh_3(const MD&, const MC&, const T& ...) [with C3T3 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>; MD = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >; MC = CGAL::Mesh_criteria_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> > >; T = {CGAL::parameters::internal::Perturb_options, CGAL::parameters::internal::Exude_options}]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:273:40:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/usr/local/include/CGAL/Robust_weighted_circumcenter_filtered_traits_3.h:405:48: error: no match for call to ‘(CGAL::Lazy_kernel_generic_base<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> >, CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::Epeck>::Compute_squared_radius_smallest_orthogonal_sphere_3 {aka CGAL::Lazy_construction_nt<CGAL::Epeck, CGAL::CommonKernelFunctors::Compute_squared_radius_smallest_orthogonal_sphere_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::CommonKernelFunctors::Compute_squared_radius_smallest_orthogonal_sphere_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > > >}) (CGAL::Type_equality_wrapper<CGAL::Lazy_kernel_base<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> >, CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::Epeck>, CGAL::Epeck>::Weighted_point_3, CGAL::Type_equality_wrapper<CGAL::Lazy_kernel_base<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> >, CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::Epeck>, CGAL::Epeck>::Weighted_point_3)’
  405 |     return back_from_exact(exact_compute_radius(to_exact(p),to_exact(q)));
      |                            ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/Core:284,
                 from /home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:4,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaHelper/src/sofa/helper/StateMask.h:27,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/BaseMechanicalState.h:31,
                 from /home/owen/Softwares/sofa/src/SofaKernel/modules/SofaCore/src/sofa/core/behavior/MechanicalState.h:25,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.h:37,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:31,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SwapWrapper<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3> >’:
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::SwapWrapper<Eigen::Matrix<double, 3, 3> >]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/DenseBase.h:384:7:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:805:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 3, 3>; MatrixTypeB = Eigen::Matrix<double, 3, 3>; bool SwapPointers = false]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/PlainObjectBase.h:682:81:   required from ‘void Eigen::PlainObjectBase<Derived>::_swap(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Matrix.h:334:7:   required from ‘void Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::swap(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/TriangularMatrix.h:687:5:   [ skipping 33 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&, boost::parameter::aux::use_default_tag) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘ResultType CGAL::boost_param_dispatch_0boost_46lloyd_optimize_mesh_3(ResultType (*)(), const Args&, long int, c3t3_type&&, domain_type&&) [with ResultType = CGAL::Mesh_optimization_return_code; Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; c3t3_type = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; domain_type = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type CGAL::boost_param_impl46lloyd_optimize_mesh_3(const Args&) [with Args = boost::parameter::aux::flat_like_arg_list<boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::domain, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::domain, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> > > >, std::integral_constant<bool, true> >, boost::parameter::aux::flat_like_arg_tuple<CGAL::parameters::tag::c3t3, boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::c3t3, CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> >, CGAL::Default, int, CGAL::Boolean_tag<true> >, void>, CGAL::Sequential_tag> >, int, int> > >, std::integral_constant<bool, true> > >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<Args>::type = CGAL::Mesh_optimization_return_code]’
/usr/local/include/CGAL/lloyd_optimize_mesh_3.h:46:1:   required from ‘typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type CGAL::lloyd_optimize_mesh_3(ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&, typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type) [with ParameterArgumentType0 = CGAL::Mesh_complex_3_in_triangulation_3<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, int, int>&; ParameterArgumentType1 = CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >&; ParameterArgumentType2 = boost::parameter::aux::tagged_argument_list_of_1<boost::parameter::aux::tagged_argument<CGAL::parameters::tag::max_iteration_number_, const int> >; typename CGAL::boost_param_result_46lloyd_optimize_mesh_3<typename boost::parameter::aux::argument_pack<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0&&, ParameterArgumentType1&&, ParameterArgumentType2&&>::type>::type = CGAL::Mesh_optimization_return_code; typename boost::parameter::aux::match<CGAL::boost_param_params_46lloyd_optimize_mesh_3<int>, ParameterArgumentType0, ParameterArgumentType1, ParameterArgumentType2>::type = boost::parameter::parameters<boost::parameter::required<CGAL::parameters::tag::c3t3, boost::parameter::aux::always_true_predicate>, boost::parameter::required<CGAL::parameters::tag::domain, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::time_limit_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::max_iteration_number_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::convergence_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::freeze_bound_, boost::parameter::aux::always_true_predicate>, boost::parameter::optional<CGAL::parameters::tag::do_freeze_, boost::parameter::aux::always_true_predicate> >]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:295:36:   required from ‘void cgal::MeshGenerationFromPolyhedron<DataTypes>::doUpdate() [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’
/home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:45:42:   required from here
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
   53 |     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/owen/Softwares/sofa/src/SofaKernel/extlibs/eigen/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
   57 |     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/CGAL/Mesh_triangulation_3.h:27,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.inl:39,
                 from /home/owen/Softwares/sofa/src/applications/plugins/CGALPlugin/MeshGenerationFromPolyhedron.cpp:32:
/usr/local/include/CGAL/Robust_weighted_circumcenter_filtered_traits_3.h: In instantiation of ‘CGAL::Robust_filtered_compute_squared_radius_3<K_, CSR_Base_>::FT CGAL::Robust_filtered_compute_squared_radius_3<K_, CSR_Base_>::operator()(const Point_3&, const Point_3&, const Point_3&, const Point_3&) const [with K_ = CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> >; CSR_Base_ = CGAL::CartesianKernelFunctors::Compute_squared_radius_3<CGAL::Epick>; CGAL::Robust_filtered_compute_squared_radius_3<K_, CSR_Base_>::FT = double; CGAL::Robust_filtered_compute_squared_radius_3<K_, CSR_Base_>::Point_3 = CGAL::Point_3<CGAL::Epick>]’:
/usr/local/include/CGAL/Mesh_3/mesh_standard_cell_criteria.h:95:30:   required from ‘CGAL::Mesh_3::Cell_radius_edge_criterion<Tr, Visitor_>::Is_bad CGAL::Mesh_3::Cell_radius_edge_criterion<Tr, Visitor_>::do_is_bad(const Tr&, const Cell_handle&) const [with Tr = CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >; Visitor_ = CGAL::Mesh_3::Cell_criteria_visitor_with_features<CGAL::Mesh_3_regular_triangulation_3_wrapper<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> > >; CGAL::Mesh_3::Cell_radius_edge_criterion<Tr, Visitor_>::Is_bad = boost::optional<double>; CGAL::Mesh_3::Cell_radius_edge_criterion<Tr, Visitor_>::Cell_handle = CGAL::internal::CC_iterator<CGAL::Compact_container<CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Triangulation_data_structure_3<CGAL::Mesh_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, CGAL::Regular_triangulation_vertex_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Triangulation_ds_vertex_base_3<void> > >, CGAL::Compact_mesh_cell_base_3<CGAL::Robust_weighted_circumcenter_filtered_traits_3<CGAL::Mesh_3::Robust_intersection_traits_3_new<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick> > >, CGAL::Polyhedral_mesh_domain_with_features_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Polyhedron_3<CGAL::Mesh_3::Robust_intersection_traits_3<CGAL::Epick>, CGAL::Mesh_3::Mesh_polyhedron_items<int>, CGAL::HalfedgeDS_default, std::allocator<int> > >, void>, CGAL::Sequential_tag> >, CGAL::Default, CGAL::Default, CGAL::Default>, false>]’
/usr/local/include/CGAL/Mesh_3/mesh_standard_cell_criteria.h:72:18:   required from here
/usr/local/include/CGAL/Robust_weighted_circumcenter_filtered_traits_3.h:95:43: error: no match for call to ‘(CGAL::Lazy_kernel_generic_base<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> >, CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::Epeck>::Compute_squared_radius_3 {aka CGAL::Lazy_construction_nt<CGAL::Epeck, CGAL::CartesianKernelFunctors::Compute_squared_radius_3<CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::CartesianKernelFunctors::Compute_squared_radius_3<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> > > >}) (CGAL::Type_equality_wrapper<CGAL::Lazy_kernel_base<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> >, CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::Epeck>, CGAL::Epeck>::Point_3, CGAL::Type_equality_wrapper<CGAL::Lazy_kernel_base<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> >, CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::Epeck>, CGAL::Epeck>::Point_3, CGAL::Type_equality_wrapper<CGAL::Lazy_kernel_base<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> >, CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::Epeck>, CGAL::Epeck>::Point_3, CGAL::Type_equality_wrapper<CGAL::Lazy_kernel_base<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> >, CGAL::Cartesian_converter<CGAL::Simple_cartesian<boost::multiprecision::number<boost::multiprecision::backends::gmp_rational> >, CGAL::Simple_cartesian<CGAL::Interval_nt<false> > >, CGAL::Epeck>, CGAL::Epeck>::Point_3)’
   95 |     return back_from_exact(exact_sq_radius(to_exact(p),
      |                            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~
   96 |                                            to_exact(q),
      |                                            ~~~~~~~~~~~~
   97 |                                            to_exact(r),
      |                                            ~~~~~~~~~~~~
   98 |                                            to_exact(s)));
      |                                            ~~~~~~~~~~~~
ninja: build stopped: subcommand failed.
